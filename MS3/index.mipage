:Class index3 : MiPageSample

    :SECTION MAIN ⍝ BUILDS THE PAGE INITIALLY
    
    :Field shared GROUPS←'Dyalog' 'SyncFusion' 'JQueryUI' 'Base HTML' ⍝ groups of elements
    :Field shared NSS←'DC' 'SF' 'JQ' 'html'                           ⍝ xorresponding nss
    :Field shared FILEEXT←'.mipage'                                   ⍝ Server.xml:DefaultExtension
    :Field shared C                                                   ⍝ shortcut to cache
    :field CURRFILES                                                  ⍝ currently relevant files

    ∇ Compose
      :Access public
      Cache'#.CACHE'                           ⍝ ensure cache exists
      Add _.StyleSheet'/Styles/homepage.css'   ⍝ assign cascading style sheet
      CURRFILES←⊂'/About_MiServer'             ⍝ initial page to load
      TREE←(Dread'Examples/Data/tree.txt')~⊂'' ⍝ load tree structure and remove blank lines
      Add'mainSP'Horz MakeLeft MakeMid         ⍝ two panels
    ∇

    ∇ Cache ns;allscores;ctrlsinfiles;names;list ⍝ set up cache if it does not exist
      C←⍎ns ⎕NS ⍬                                ⍝ ensure cache ns in ws and create shortcut
      :Hold Token names←'files' 'controls' 'rankings' 'controlsoi' 'iocontrols'
          :If Missing names
              list←(≢#.Boot.AppRoot)↓¨⊃⍪/{Slist'Examples/',⍵}¨NSS                               ⍝ sample filenames
              C.files←list[;2]/⍨list[;1]≢¨⊂'<DIR>'                                              ⍝ cache filenames - not dirs
              ctrlsinfiles←{(Words'Control'Section Dread ⍵)~'_',¨NSS}¨C.files                   ⍝ controls of each sample
              C.controls←∪↑,/ctrlsinfiles                                                       ⍝ cache all controls
              allscores←C.controls∘.{(102-2×(50↑⊃⌽⍵)⍳⊂⍺)-'Advanced'In⊃⍵}↓⍉↑C.files ctrlsinfiles ⍝ controls vs files
              C.rankings←(+/0<allscores)↑¨↓⍒⍤1⊢allscores                                        ⍝ cache all rankings
              C.controlsoi←C.controls∘⍳ ⋄ C.eocontrols←∊∘C.controls                             ⍝ cache hash tables
          :EndIf
      :EndHold
      :Hold Token names←'info' 'infooi' 'eoinfo'
          :If Missing names
              C.info←FromCSV Dread'Examples/Data/info.csv'    ⍝ cache lookup table
              C.infooi←C.info[;1]∘⍳ ⋄ C.eoinfo←∊∘(C.info[;1]) ⍝ cache hash tables
          :EndIf
      :EndHold
    ∇

    ∇ tree←MakeTreeGS ⍝ make the "Getting Started" tree
      :Access public shared
      tree←⍉⍪1 'Start here',⊂∊CURRFILES FILEEXT ⍝ top level
      tree⍪←'pdf'DirTree'Documentation'         ⍝ documentation is PDFs only
      tree⍪←DirTree'Examples/Techniques'
      tree⍪←DirTree'Examples/Applications'
      tree[;2]←Clean¨tree[;2]  ⍝ sample apps have underscores for spaces
    ∇

    ∇ tree←MakeTreeC;nss ⍝ make the "Controls" tree
      :Access public shared
      tree←1 'Core' '/*'BuildTree CoreOnly TREE
      tree,¨←1 'All' '/'BuildTree NoSt TREE
      nss←(NSS∊⍨2⊃tree)/⍳⍴⊃tree               ⍝ which ones are roots
      (2⊃tree)[nss]←GROUPS[NSS⍳(2⊃tree)[nss]] ⍝ replace them with proper names
      tree←⍉↑tree
    ∇

    ∇ left←MakeLeft;sf;sb;tree
      left←'#leftBar'New _.div
     
      sf←'autofocus='New _.EditField'searchfield'         ⍝ search field active on page load
     ⍝ sf.On'change' 'OnSearch'('str' 'val')              ⍝ uncomment to enable pressing Enter to search!
     
      sb←'#searchbutton' '.menu'New _.button'Search'      ⍝ search button
      sb.On'click' 'OnSearch'('str' '#searchfield' 'val') ⍝ button click sends search field string to callback
     
      left.Add¨Horz sf sb                        ⍝ add the search field and button next to each other
      left.Add¨Tree¨'Getting Started' 'Controls' ⍝ NOTE: Must have MakeTreeXX where XX is initials of title!!!
    ∇

    ∇ div←Tree title;xx;tree                                    ⍝ make tree based on its heading
      div←New _.div                                             ⍝ container
      div.Add _.hr                                              ⍝ horizontal ruler
      '.cat'div.Add _.p title                                   ⍝ heading
      xx←⎕A∩title                                               ⍝ initials of heading; XX
      tree←⍎'MakeTree',xx                                       ⍝ calls MakeTreeXX
      tree←('#tree',xx)div.Add _.ejTreeView tree                ⍝ gives id="XX"
      tree.On'nodeSelect' 'OnTree'('node' 'eval' 'argument.id') ⍝ sends along selected node's id
    ∇

    ∇ mid←MakeMid;url;code;title;attrs;d;hidden ⍝ middle pane with info, framed content and source
      mid←'#midBar'New _.div                    ⍝ container
      hidden←'style="display:none;"'            ⍝ attribute to start hidden
      code←Dread url←⊃CURRFILES                 ⍝ read initial page
     
      title←Clean'Control'Section code   ⍝ create and fill placeholder for title
      '#Title'Add _.title('MS3: ',title) ⍝ this goes on the browser tab
     
      hidden'#Header'mid.Add _.h2        ⍝ heading placeholder for category lists and search results
      d←'#Sample'mid.Add _.div           ⍝ container for file info so its visibility can be toggled
      '#SampleTitle'd.Add _.strong title ⍝ filename
      d.Add'– '
      '#SampleDesc'd.Add _.span('Description'Section code) ⍝ sample description
      ('#PopLink'd.Add _.span).Add NewWinA'Pop out'url     ⍝ "Pop out" link
      d.Add _.br                                           ⍝ line break
     
      d←hidden'#Control'mid.Add _.div ⍝ container for widget info for toggleable visibilty
      '#ControlTitle'd.Add _.strong   ⍝ placeholder for widget name
      d.Add'– '
      '#ControlDesc'd.Add _.span ⍝ placeholder for widget description
      '#DocLink'd.Add _.span     ⍝ placeholder for link to WidgetDoc page
      d.Add _.br
     
      attrs←'#ShowRelated' 'onchange=$("#rel").toggle(400)'
      attrs d.Add _.Input'checkbox' '' 'Show 0 related samples ' 'right' ⍝ checkbox to toggle list of related samples
      hidden'#rel'd.Add _.div                                            ⍝ related-samples list starts hidden
     
      mid.Add _.hr
      ('#SampleFrame'mid.Add _.div).Add Frame url ⍝ embedded page
      mid.Add _.hr
     
      attrs←'#ShowSource' 'onchange=$("#SampleSource").toggle(400)'    ⍝ smooth transition
      attrs mid.Add _.Input'checkbox' '' 'Show source code' 'right'    ⍝ checkbox to toggle source code visibility
      hidden'#SampleSource' '.samplesource'mid.Add _.div Ⓒ Format code ⍝ ... starts hidden
     
      '#Handler'mid.Add _.div ⍝ placeholder for list item event handler
    ∇

    :ENDSECTION

    :SECTION CALLBACKS ⍝ PROGRAMS THAT RUN AFTER THE USER TRIGGERS AN EVENT HANDLER

    ∇ r←OnTree;node;list;control;nost;ns
      :Access Public                                  ⍝ callback for the ejTreeViews
      nost←'*'~⍨node←Get'node'                        ⍝ was sent along as "node" by the event handler
      :If '/'=⊃⌽nost                                  ⍝ if selected a category:
          :If 'GS'In _what                                ⍝ if selected node under "Getting Started":
              r←('pdf'/⍨'Documentation'In nost)ShowFiles node ⍝ restrict to PDFs if documentation
          :Else                                           ⍝ if selected node under "Controls":
              r←ShowCat node                                  ⍝ show all files in that category
          :EndIf
      :ElseIf '.'∊nost                                ⍝ if filename with extention, e.g. "something.mipage" or "other.pdf":
          r←ShowFile nost                                 ⍝ load it up
      :Else                                           ⍝ if selected a widget:
          CURRFILES←Relevant LastSub nost                 ⍝ find relevant samples
          :If ×≢CURRFILES                                 ⍝ if there is at least one:
              r←ShowSample nost                               ⍝ show it
          :Else                                           ⍝ if no samples:
              r←ShowNone nost                                 ⍝ display a message
          :EndIf
      :EndIf
    ∇

    ∇ r←OnList
      :Access Public   ⍝ callback for the sample lists
      r←ShowFile _what ⍝ just show it
    ∇

    ∇ r←OnSearch;terms;urls
      :Access Public       ⍝ callback for search
      terms←Words Get'str' ⍝ was sent along by .On
      r←''
      urls←'/',¨∪⊃,/(⊂''),Relevant¨terms                              ⍝ find relevant files
      r,←'#Title'Replace'MS3: ',⍕terms                                ⍝ browser tab
      r,←'#Header'Replace(⍕≢urls),' samples for <em>',(⍕terms),'<em>' ⍝ "3 samples for Button" heading
      r,←'#SampleFrame'Replace∊ListItem¨SortFiles urls                ⍝ output the sorted  list
      r,←RefreshHandler                                               ⍝ we must refresh the handler
      r,←'#SampleSource'Replace''                                     ⍝ clear source code area
      r,←Show'#Header'                                                ⍝ show search result title
      r,←Hide'#Control'                                               ⍝ no widget
      r,←Hide'#Sample'                                                ⍝ no page either
    ∇
    :ENDSECTION

    :SECTION SHOW ⍝ SUB-ROUTINES THAT GENERATE JAVASCRIPT TO SHOW NEW STUFF

    ∇ r←ShowFile node;name;url;code;nost
      r←''
      nost←node~'*'
      url←NoExt nost
      name←Clean LastSub url
      r,←'#Title'Replace'MS3: ',name ⍝ browser tab
      :If FILEEXT In nost                                        ⍝ if an embedded page:
          CURRFILES(⊢,~)←⊂url                                    ⍝ move selected file to the front of the list
          code←Dread url                                         ⍝ read the source
          r,←'#SampleTitle'Replace name                              ⍝ filename
          r,←'#SampleDesc'Replace'Description'Section code           ⍝ page description
          r,←'#PopLink'Replace NewWinA'Pop out'url                   ⍝ link to open in new tab
          r,←'#SampleFrame'Replace Frame nost                        ⍝ embedded page
          r,←'#SampleSource'Replace Format code                      ⍝ syntax coloured source code
          r,←Hide'#Header'                                           ⍝ hide heading
          r,←Show'#Sample'                                           ⍝ display file name and description
          :If IsDemo nost                                            ⍝ if sample page:
              r,←ReplaceRelMsg                                           ⍝ replace message about how many related
              r,←'#rel'Replace∊ListItem¨1↓CURRFILES,¨'*'                 ⍝ add star to differ from tree entries
              r,←RefreshHandler                                          ⍝ refresh handler because of new items
              r,←Execute'$("#Control").',(⊃'hide' 'show'↓⍨'*'∊node),'()' ⍝ hide widget info if we got here from a list
          :Else                                                      ⍝ if app or info page:
              r,←Execute'$("#Control").hide()'                           ⍝ no widget info
          :EndIf
      :Else                                                          ⍝ if other document (PDF):
          r,←'#Header'Replace name                                       ⍝ filename
          r,←'#SampleFrame'Replace NewObj nost                           ⍝ insert as object
          r,←'#SampleSource'Replace''                                    ⍝ empty source code container
          r,←Show'#Header'                                               ⍝ show the filename
          r,←Hide'#Control'                                              ⍝ hide the widget info
          r,←Hide'#Sample'                                               ⍝ and the file info
      :EndIf
    ∇

    ∇ r←ShowNone node;name;ns;control;msg ⍝ genereic message when there is no sample to show
      r←''
      name←∊'_.',¨(ns control)←NsControl node                         ⍝ widget we wanted a sample for
      r,←'#Title'Replace'MS3: ',name                                  ⍝ browser tab
      r,←'#SampleTitle'Replace name                                   ⍝ widget name
      r,←'#ControlDesc'Replace Info name                              ⍝ we may have some info on it
      r,←'#DocLink'Replace NewWinA'View documentation'Doc ns control  ⍝ and a link for more info
      r,←'#rel'Replace''                                              ⍝ obviously there are no related
      r,←Hide'#Header'                                                ⍝ hide the larger header
      r,←Show'#Control'                                               ⍝ show the widget info
      r,←Hide'#Sample'                                                ⍝ hide the nonexistant file info
      msg←'<p>Sorry, no samples available for <em>',name,'</em></p>'  ⍝ message about the problem...
      r,←'#SampleFrame'Replace msg                                    ⍝ ... goes where the sample would be
      r,←'#SampleSource'Replace''                                     ⍝ no source either
    ∇

    ∇ r←ShowSample node;code;title;url;control;doc;info;ns;name ⍝ load a sample page and update info
      r←''
      name←∊'_.',¨(ns control)←NsControl node ⍝ full proper name
      info←Info name
      code←Dread url←⊃CURRFILES ⍝ the first is what we display, the rest are related
      title←LastSub url
      r,←'#Title'Replace'MS3: ',title                                  ⍝ browser tab
      r,←'#SampleTitle'Replace title                                   ⍝ filename
      r,←'#SampleDesc'Replace'Description'Section code                 ⍝ sample description
      r,←'#PopLink'Replace NewWinA'Pop out'url                         ⍝ update new-tab link
      r,←'#SampleFrame'Replace Frame url                               ⍝ load sample page
      r,←'#SampleSource'Replace Format code                            ⍝ update source code
      r,←Hide'#Header'                                                 ⍝ no need for the list header
      r,←Show'#Sample'                                                 ⍝ do show the sample's info
      :If IsDemo url                                                   ⍝ if sample page:
          r,←'#ControlTitle'Replace name                                   ⍝ filename
          r,←'#ControlDesc'Replace info                                    ⍝ widget info
          r,←'#DocLink'Replace NewWinA'View documentation'Ⓒ Doc ns control ⍝ update link to WidgetDoc
          r,←ReplaceRelMsg                                                 ⍝ replace message about how many related
          r,←'#rel'Replace∊ListItem¨1↓CURRFILES,¨'*'                       ⍝ update list
          r,←'#rel'Append New _.Handler'.listitem' 'click' 'OnList'        ⍝ refresh handler because of new items
          r,←Show'#Control'                                                ⍝ show it all
      :Else                                                            ⍝ if app or info page:
          r,←Hide'#Control'                                                ⍝ hide the widget info and related list
      :EndIf
    ∇

    ∇ r←{ext}ShowFiles node;list;name ⍝ show list of files
      r←''
      :If 900⌶⍬ ⋄ :OrIf 0=⍴ext ⋄ ext←1↓FILEEXT ⋄ :EndIf ⍝ default file extention
      list←ext Slist node                               ⍝ get list of all those files
      list←list[;2]/⍨list[;1]≢¨⊂'DIR'                   ⍝ remove folders
      list←(¯1+≢#.Boot.AppRoot)↓¨list,¨⊂'.',ext         ⍝ remove site path, but append file extention
      r,←'#SampleFrame'Replace∊ListItem¨SortFiles list  ⍝ sorted list
      r,←RefreshHandler                                 ⍝ refresh handler because of new items
      r,←'#SampleSource'Replace''                       ⍝ no source code
      r,←'#Title'Replace'MS3: ',name←LastSub ¯1↓node    ⍝ browser tab
      r,←'#Header'Replace name                          ⍝ big heading
      r,←Show'#Header'                                  ⍝ show it too
      r,←Hide'#Control'                                 ⍝ no widget
      r,←Hide'#Sample'                                  ⍝ no file either
    ∇

    ∇ r←ShowCat node;tree;urls;name;core;cats ⍝ show samples for all the widgets in a category
      r←''
      core←'*'∊node              ⍝ is it a core widget
      tree←NoSt'*'∘∊Of⍣core⊢TREE ⍝ filter
      node~←'*'
      urls←∪⊃,/(⊂''),Relevant¨LastSub¨tree/⍨⊃¨node∘⍷¨tree ⍝ unique samples relevant to one of ours
      cats←1↓¨¯1↓node⊂⍨SlOf node                          ⍝ find the top level ns
      (1↑cats)←(GROUPS,⊂'')[NSS⍳1↑cats]                   ⍝ replace by a proper name if abbr
      name←⍕('All' 'Core'⊃⍨1+core)(2↑cats)                ⍝ appropriate prefix
      r,←'#Title'Replace'MS3: ',name                      ⍝ browser tab
      r,←'#SampleFrame'Replace∊ListItem¨SortFiles urls    ⍝ sorted list
      r,←RefreshHandler                                   ⍝ refresh handler because of new items
      r,←'#SampleSource'Replace''                         ⍝ no source
      r,←'#Header'Replace name,' Controls'                ⍝ big heading
      r,←Show'#Header'                                    ⍝ show it too
      r,←Hide'#Control'                                   ⍝ no widget
      r,←Hide'#Sample'                                    ⍝ no file either
    ∇

    ∇ r←ReplaceRelMsg ⍝ generate JavaScript to replace message about related samples
      r←'[for=''ShowRelated'']'Replace{'Show ',(⍕⍵),' related sample','.',⍨'s'/⍨⍵≠1}0⌈¯1+≢CURRFILES
    ∇

    ∇ r←RefreshHandler ⍝ ⍝ generate JavaScript to refresh even handler for newly inserted objects
      r←'#Handler'Replace New _.Handler'.listitem' 'click' 'OnList'
    ∇
    
    Hide←{Execute'$("',⍵,'").hide()'} ⍝ toggle object visibility off
    Show←{Execute'$("',⍵,'").show()'} ⍝ toggle object visibility off

    :ENDSECTION

    :SECTION UTILS ⍝ VARIOUS UTILITIES

    ∇ r←{a}Ⓒ w     ⍝ ⊆
      r←⊂⍣(1=≡w)⊢w ⍝ enclose if simple
      →0/⍨900⌶⍬    ⍝ but when dyadic...
      r,⍨←⊂a       ⍝ ... Iverson link
    ∇

    FromCSV←↑{'"'~¨⍨1↓¨t⊂⍨(','=t)∧~≠\'"'=t←',',⍵}¨ ⍝ Convert CSV VTV to matrix

    Of←{⍵/⍨⍺⍺¨⍵}                        ⍝ those elements of ⍵ that satisfy ⍺⍺ element
    NoSt←~∘'*'¨                         ⍝ remove stars from all elements in a VTV
    SlOf←'/'∘=                          ⍝ slashes of
    In←∨/⍷                              ⍝ is found in
    IsDemo←{∨/∊'Simple' 'Advanced'⍷¨⊂⍵} ⍝ is widget demo sample

    FirstLast←(⊃Ⓒ(⊃⌽))(SlOf⊂⊢)                        ⍝ '/aaa/bbb/ccc/ddd'  →  '/aaa' '/ddd'
    CoreOnly←∊∘FirstLast¨'*'∘∊Of                      ⍝ those ending in * but without middle category
    Levels←{(+/¨SlOf⍵)+~SlOf(⊃⌽)¨⍵}                   ⍝ number of /s adjusted for categories' final /
    LastSub←{⍵↑⍨1-'/'⍳⍨⌽⍵}                            ⍝ '/aaa/bbb/ccc/ddd'  →  'ddd'
    Name←{1↓⊃⌽((SlOf⊂⊢)⍵)~⊂,'/'}                      ⍝ '/aaa/bbb/ccc/ddd/'  →  'ddd' only in BuildTree
    BuildTree←{⍺((⊂⊣),⊢)¨(Levels NoSt⍵)(Name¨NoSt⍵)⍵} ⍝ prepend parent category

    Words←{(1↓¨(∊∘' .'⊂⊢)' ',⍵)~⊂''} ⍝ split at spaces and dots and remove empty pieces
    NsControl←{1↓¨FirstLast ⍵}       ⍝ '/aaa/bbb/ccc/ddd'  →  'aaa' 'ddd'

    Token←{'Currently updating or creating #.CACHE.(',')',⍨1↓∊' ',¨⍵} ⍝ create specific token for :Hold
    Missing←{0∊#.CACHE.⎕NC⍵}                                          ⍝ are any of the required cached things missing

    NewObj←{('width=740 height=900 data=',Q⍵)New _.object}
    Format←'small;border:none'∘#.HTMLInput.APLToHTMLColour                                       ⍝ make coloured HTML
    Frame←{⍺←⊢ ⋄ ⍺'.iframed'('src=',Q ⍵,'?NoWrapper=1')New _.iframe}                             ⍝ _.iframe without wrapper
    NewWinA←{'target="_blank"'('href=',Q⊃⌽⍵) 'title="Click to open in a new window"'New _.a Ⓒ⊃⍵} ⍝ new-tab link
    Horz←{⍺←⊢ ⋄ r⊣(r←⍺ New _.StackPanel ⍵).Horizontal←1}                                         ⍝ horizontal StackPanel
      ListItem←{ ⍝ generate pre-rendered entry for lists
          nost←⍵~'*'
          noext←~'.'∊nost
          r←'<p class="listitem" id="',nost,(noext/FILEEXT),('*'∩⍵),'"><strong>',Clean NoExt LastSub nost
          ∨/noext,FILEEXT⍷nost:r,'</strong> – ',('Description'Section Dread nost),'</p>' ⍝ add description if it is a mipage
          r,'</strong></p>'
      }
    SortFiles←{⍵[⍋↑LastSub¨⍵]} ⍝ sort by filename while ignoring path

    ∇ r←Dread page;i ⍝ Read a page via the #.CACHE.DREAD (C)
      :Access public shared
      :Trap 0
          :If Missing'Dread' ⋄ C.DREAD←⎕NS'' ⋄ C.DREAD.(Keys←Data←⍬) ⋄ :EndIf
          :If (≢C.DREAD.Keys)≥i←C.DREAD.Keys⍳⊂page
              r←i⊃C.DREAD.Data
          :Else
              C.DREAD.Data,←⊂r←#.UnicodeFile.ReadNestedText #.Boot.AppRoot,page,(~'.'∊page)/FILEEXT
              C.DREAD.Keys,←⊂page
          :EndIf
      :Else
          r←,⊂'[failed to read "',page,'"]'
      :EndTrap
    ∇
      Slist←{ ⍝ files in site folder
          ⍺←1↓FILEEXT ⍝ default .ext
          list←⎕SE.SALT.List #.Boot.AppRoot,⍵,' -rec -raw -full=2 -ext=',⍺
          list[;2]←('[\\/]+'⎕R'/')list[;2] ⍝ normalize slashes for www
          list
      }
      DirTree←{ ⍝ make arg for ejTreeView based on files in folder and subfolders
          ⍺←1↓FILEEXT
          parent←1(LastSub ⍵)('/',⍵,'/')
          list←⍺ Slist ⍵
          0∊⍴list:0 3⍴0 '' ''
          nodir←~list[;1]∊⍨⊂'<DIR>'
          files←list[;2]↓¨⍨¯1+≢#.Boot.AppRoot
          levels←2+(+/¨'/'=files)-+/'/'=3⊃parent
          files,¨←('.',⍺)'/'[1+(list[;1]≡¨⊂'<DIR>')]
          DelEmpty⍣≡parent⍪⍉↑levels(LastSub¨list[;2])files
      }
    DelEmpty←{⍵⌿⍨(0,⍨2</⍵[;1])∨'/'≠⊃¨⌽¨⍵[;3]} ⍝ Remove folders that do not have files
      Info←{ ⍝ Get info on a control
          control←(⍳∘'.'↓⊢)⍵
          C.eoinfo⊂control:C.info[;2]⊃⍨C.infooi⊂control ⍝ if we have, use that
          'Description'Section ⎕SRC #⍎⍵                 ⍝ else extract it
      }

    Relevant←{C.eocontrols⊂⍵:C.files[C.rankings⊃⍨C.controlsoi⊂⍵] ⋄ 0⍴⊂''}  ⍝ samples that demo ⍵
    Doc←{∊'/Documentation/DyalogAPIs/WidgetDoc?namespace=_' '&widget=',¨⍵} ⍝ address of WidgetDoc
    Q←'"'∘,,∘'"'                                                           ⍝ surround with quotes

    Clean←'_'⎕R' '              ⍝ underscores  →  spaces
    NoExt←{'.'∊⍵:⍵↓⍨-'.'⍳⍨⌽⍵⋄⍵} ⍝ 'aaa.bbb.ccc'  →  'aaa.bbb'

      Section←{ ⍝ extract section ⍺:: from code ⍵
          regex←'^\s*⍝\s*',⍺,':(:.*?)$((\R^⍝(?!\s*\w+::).*?$)*)'
          opts←('Mode' 'M')('DotAll' 1)
          res←(regex ⎕S'\1\2'⍠opts)⍵
          (1↓⊃res)~'⍝'
      }

    :ENDSECTION

:EndClass