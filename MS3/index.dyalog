:Class index : MiPageSample

    :SECTION GLOBALS ⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝

    :Field Public Shared APPS    ⍝ List of all apps
    :Field Public Shared SAMPLES ⍝ List of all samples
    :Field Public Shared GROUPS  ⍝ Names of groups of elements
    :Field Public Shared REFS    ⍝ ... their refs

    :ENDSECTION

    :SECTION UTILITIES ⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝

    SpaceToDir←{'Examples/',1↓⍵,(⍵≡'_HTML')/'plus'} ⍝ _HTML is in the HTMLplus folder

    Dread←{0::,⊂'[file read failed]' ⋄ #.UnicodeFile.ReadNestedText #.Boot.AppRoot,⍵,'.dyalog'}

    Dlist←{0::⍬ ⋄ ¯7↓¨6⊃#.Files.DirX #.Boot.AppRoot,⍵,'/*.dyalog'}

    ∇ node←Node
      node←⊃2⊃⎕VFI{((+\⍵='_')⍳2)↓⍵}⊃_PageData.node
    ∇

      Section←{ ⍝ extract section ⍺:: from code ⍵
          regex←'^\s*⍝\s*',⍺,':(:.*?)$((\R^⍝(?!\s*\w+::).*?$)*)'
          opts←('Mode' 'M')('DotAll' 1)
          res←(regex ⎕S'\1\2'⍠opts)⍵
          (1↓⊃res)~'⍝'
      }

    ∇ text←JSsafe text;fr;to
     ⍝ Make text JS safe by escaping problematic chars
     
     ⍝ ' " \ NL CR TB BS FF
      fr←'''' '"' '\\' '\n' '\r',⎕UCS 9 8 12
     ⍝ Problematic chars are often problematic in regex too :-)
      to←'\\''' '\\"' '\\\\' '\\n' '\\r' '\\t' '\\b' '\\f'
     ⍝ Replace problematic chars and sourround with quotes
      text←1⌽'""',(fr ⎕R to⍠'Mode' 'D')text
    ∇

    ∇ js←APLtoJS vtv;act;data
      :Access public shared
     ⍝ Convert vectors of pseudo JS (generated by Replace, Execute, et al.) to proper JS
     
      js←''
      :For act data :In eis vtv
          data←JSsafe⊃⌽eis data ⍝ the last or only one
          :Select ⊃eis act      ⍝ the first or only one
          :Case 'assign'
              js,←(⊃⌽act),' = ',data,';' ⍝ variable = "data"
          :Case 'execute'
              js,←'eval(',data,');' ⍝ eval("data")
          :Case 'replace'
              js,←'$("',(⊃⌽act),'").html(',data,');' ⍝ $("#myid").html("data")
          :Else
              js,←'$("',(⊃⌽act),'").',(⊃act),'(',data,');' ⍝ $("#myid").append("data")
          :EndSelect
      :EndFor
    ∇

    :ENDSECTION

    :SECTION MAIN ⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝

    ∇ Compose;left;mid;right;sp;vp
      :Access public
     
     ⍝ Initialize globals
      GROUPS←'Base HTML' 'Wrapped HTML' 'Dyalog Controls' 'JQueryUI' 'SyncFusion'
      REFS←_html _HTML _DC _JQ _SF
     
      htmlShort←'⍝',¨Dread'Examples/Data/htmlShort'
      htmlLong←'⍝',¨Dread'Examples/Data/htmlLong'
     
      Use'ejTab' ⍝ May get added by callbacks
     
      newdiv←{⍵ New _.div}                                  ⍝ Make a div
      textspan←{'.textspan'New _.span ⍵}                    ⍝ And a span
      horz←{⍺←⊣ ⋄ r⊣(r←⍺ New _.StackPanel ⍵).Horizontal←1}  ⍝ Horizontal StackPanel
     
      '#title'Add _.title'MS3: About' ⍝ After the : will be updated
     
      Add _.StyleSheet'/Styles/homepage.css'
     
      (left mid)←newdiv¨'leftBar' 'midBar' ⍝ Create panes
     
      sp←'mainSP'horz left mid
      sp.Items[1⊣3].style←⊂'width: 200px; max-height: 450px;'
      sp.Items[2].style←⊂'margin: 5px;'
      sp.style←'height: 450px; width: 100%;'
     
      vp←Add _.StackPanel sp
      vp.style←'width:100%'
     
      PopulateLeft left
      PopulateMid mid
    ∇

    ∇ PopulateLeft thediv;class;depths;group;items;names;ref;samples;tv;vp
     
     ⍝ SEARCH FIELD ⍝⍝⍝
      (thediv.Add _.EditField'str').On'OnSearch' ''('str' 'val')
     
      thediv.Add _.hr
     
     ⍝ SAMPLE APPS ⍝⍝⍝
      APPS←(Dlist'Examples/Apps')~⊂'index'
      thediv.Add textspan'Sample Apps'
      tv←thediv.Add _.ejTreeView(1,[1.5]APPS)
      tv.style←'max-height: 250px'
      tv.On'nodeSelect' 'OnApp'('node' 'eval' 'argument.id')
     
      thediv.Add _.hr
     
     ⍝ CONTROLS ⍝⍝⍝
      items←0 3⍴⍬
      :For (group ref) :InEach GROUPS REFS
          names←{({#.HtmlElement=⊃⊃⌽⎕CLASS ⍵}¨⍵)/⍵}ref.(⍎¨⎕NL ¯9.4)
          class←2↓⍕ref               ⍝ Remove leading #.
          names←(3+⍴class)↓¨⍕¨names  ⍝
          samples←class FindSamples names
          names←(⊂group),⊃,/(⊂¨names),¨samples
          depths←1,∊2,⍪(⍴¨samples)⍴¨3
          items⍪←depths,(⍪names),(⊂class)
      :EndFor
      thediv.Add textspan'Controls'
      tv←thediv.Add _.ejTreeView(0 ¯1↓SAMPLES←items)
      tv.style←'max-height: 300px'
      tv.On'nodeSelect' 'OnControl'('node' 'eval' 'argument.id')
    ∇

    ∇ r←space FindSamples names;i;samples;suffix
      samples←Dlist SpaceToDir space
      r←(⍴names)⍴⊂''
     
      :For suffix :In 'Simple' 'Advanced'
          i←(((-⍴suffix)↑¨samples)∊⊂suffix)/⍳⍴samples
          i←{(⍵≤⍴names)/⍵}names⍳(-⍴suffix)↓¨samples[i]
          r[i]←r[i],¨⊂⊂suffix
      :EndFor
    ∇

    ∇ PopulateMid mid;url;code;frame;mya
     
     ⍝ Read framed pages
      url←'Examples/Apps/About'
      code←Dread url
     
     ⍝ Create and fill placeholder for title header
      mya←('#SampleTitle'mid.Add _.h2).Add _.a('Title'Section code)
      'target' 'href'mya.Set'_blank'url
     
     ⍝ Create and fill placeholder for description line
      '#SampleDesc'mid.Add _.p('Description'Section code)
     
     ⍝ Create and fill placeholder for embedded page
      frame←'#SampleFrame'mid.Add _.div
      ('src=',url,'?NoWrapper=1')'width="800"' 'height="400"'frame.Add _.iframe
      '#SampleSource'mid.Add _.div(#.HTMLInput.APLToHTMLColour code)
    ∇

    :ENDSECTION

    :SECTION CALLBACKS ⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝

    ∇ r←OnApp
      :Access Public
     ⍝ Gets called upon selection in Sample Apps tree
      r←GenJS Update'Examples/Apps'(Node⊃APPS)
    ∇

    ∇ r←OnControl;node;depth;sample;control;space;spacedir;files;out;file;code;ctrlsec;url;iframe;page;desc;title;item;spacectrl
      :Access Public
     ⍝ Gets called upon selection in Controls tree
     
     ⍝ Get details
      node←Node
      depth←⊃SAMPLES[node;1]
      control←depth⊃''(⊃SAMPLES[node;2])(⊃SAMPLES[1⌈1+node-2⍳⍨⌽node↑SAMPLES[;1];2])
      sample←depth⊃'index' ''(control,⊃SAMPLES[node;2])
      space←⊃SAMPLES[node;3]
      spacedir←SpaceToDir space
     
      :If depth=2 ⍝ Element
          spacectrl←space,'.',control
          files←⊃↓⍉Dlist spacedir
          out←'style="width:800px;height:400px;border:2px inset"'New _.div
     
          :For file :In files
              url←spacedir,'/',file
              code←Dread url
              ctrlsec←'Control'Section code
              :If (⊂spacectrl)∊1↓¨(' '∘=⊂⊢)' ',ctrlsec ⍝ Split Space-delimited list
                  iframe←'src' 'width' 'height'(New _.iframe).Set(url,'?NoWrapper=1')800 400
                  page←¯7↓file
                  desc←'Description'Section code
                  title←New _.a ctrlsec                ⍝ link with element names
                  'target' 'href'title.Set'_blank'url ⍝ new tab
                  item←'style="margin:8px"'out.Add _.p desc
                  item.On'click' 0 ''(APLtoJS GenJS page title desc iframe code)
              :EndIf
          :EndFor
          title←1↓control Section htmlShort
          title←spacectrl,(×≢title)/' (',title,')'
          desc←control Section htmlLong
          r←spacectrl title desc out''
     
      :Else ⍝ Sample or Group
          r←Update spacedir sample
      :EndIf
      r←GenJS r
    ∇

    ∇ (page title desc iframe code)←Update(spacedir page);ctrlsec;url
     ⍝ Create new placeholder values
      url←spacedir,'/',page
      iframe←'src' 'width' 'height'(New _.iframe).Set(url,'?NoWrapper=1')800 400
      code←Dread url
      ctrlsec←'Control'Section code
      desc←'Description'Section code
      title←'target' 'href'(New _.a ctrlsec).Set'_blank'url
     
    ∇

    ∇ r←GenJS(page title desc iframe code)
     ⍝ Generate JavaScript for filling placeholders
      r←'#title'Replace'MS3: ',page
      r,←'#SampleTitle'Replace title
      r,←'#SampleDesc'Replace desc
      r,←'#SampleFrame'Replace iframe
      r,←'#SampleSource'Replace(×≢code)/#.HTMLInput.APLToHTMLColour code
    ∇

    ∇ r←OnSearch;dir;files
      :Access Public
     
     ⍝⍝⍝ Controls
     
     ⍝⍝⍝ Samples
     
      :For dir :In 'Apps' 'html' 'HTMLplus' 'DC' 'JQ' 'SF'
          files←Dlist'Examples/',dir
     
          types←'Simple' 'Advanced'
     
          :For file :In files~⊂'index'
              dirfile←dir,'/',file
              pathfile←examples,dirfile
              source←Dread'Examples/',dir,file
              desc←('\R'⎕R'<br>'⍠'Mode' 'D')'Description'Section source
              entry←Add _.p
              (('href="',file,'"',⍨'?NoWrapper=1'/⍨~0∊⍴Get'nowrapper')entry.Add _.a).Add _.button'>'
              type←1⍳⍨∨/¨types⍷¨⊂file
              type⊃←types,⊂'App'
              entry.Add desc,notapps/' (',type,')'
          :EndFor
     
      :EndFor
     
      r←''
    ∇

    :ENDSECTION

:EndClass