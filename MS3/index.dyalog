:Class index : MiPageSample

    :SECTION GLOBALS ⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝

    :Field TYPES←'Simple' 'Advanced' 'Dyalog' ⍝ Types of samples (if not App)
    :Field GROUPS←'Base HTML' 'Wrapped HTML' 'Dyalog Controls' 'JQueryUI' 'SyncFusion' ⍝ Names of groups of elements
    :Field REFS        ⍝ ... their refs
    :Field APPS        ⍝ List of all apps
    :Field SAMPLES     ⍝ List of all samples (well, groups and controls really)
    :Field INFOLONG    ⍝ Long desc of each control
    :Field INFOSHORT   ⍝ Short (1-3 words) desc of each control
    :Field NAMESLONG   ⍝ Elements that have long info
    :Field NAMESSHORT  ⍝ Elements that have short info
    :Field SEARCH←''   ⍝ Last-search cache
    :Field CONTROLS←'' ⍝ All control names
    :Field APPDESCS    ⍝ Sample Apps' Description::
    :Field APPCTRLS    ⍝ Sample Apps' Control:: (i.e. the title)

    :ENDSECTION

    :SECTION UTILITIES ⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝

    Q←'"'∘,,∘'"'  ⍝ Surround with quotes, a.k.a. APL dragon

    D←{(×≢⍵)/' – ',⍵} ⍝ Prepend a dash if non-empty

    P←{1⌽(×≢#.HTMLInput.dtlb ⍵)/') (',⍵} ⍝ Surround with parens if non-empty

    Words←{(1↓¨(' '∘=⊂⊢)' ',⍵)~⊂''} ⍝ Split at spaces

    SpaceToDir←{'Examples/',1↓⍵,'plus'/⍨⍵≡'_HTML'} ⍝ _HTML is in the HTMLplus folder

    Frame←{'.framed' ('src=',Q⍵,'?NoWrapper=1') New _.iframe}

    NewWinA←{('target' '_blank')('href=',Q⊃⌽⍵) New _.a (⊃⍵)} ⍝ New link that opens in a new window/tab

    NewDiv←{⍵ New _.div} ⍝ Make a div

    Horz←{⍺←⊢ ⋄ r⊣(r←⍺ New _.StackPanel ⍵).Horizontal←1} ⍝ Horizontal StackPanel

    Type←{P(1⍳⍨∨/¨TYPES⍷¨⊂⍵)⊃TYPES,⊂'App'} ⍝ Simple/Advanced/App?

    Dread←{0::,⊂'[file read failed]' ⋄ #.UnicodeFile.ReadNestedText #.Boot.AppRoot,⍵,'.dyalog'} ⍝ Read dyalog file

    Dlist←{0::⍬ ⋄ ¯7↓¨6⊃#.Files.DirX #.Boot.AppRoot,⍵,'/*.dyalog'} ⍝ List dyalog files

    NodeID←{⍺←⊢ ⋄ ('#node',⊃⍵)∘,¨⍕¨⍺+⍳⍴⊃⌽⍵} ⍝ Generate node ids (⍵='L' items) optional (⍺=offset)

    In←{∨/¨⊃⍷¨/{⎕SE.Dyalog.Utils.lcase¨eis ⍵}¨⍺ ⍵} ⍝ Case-insensitive find

    Names←{1↓¨⍵↑¨⍨¯1+⍵⍳¨':'} ⍝ Extract section names from set of several 'name:: description'

    AddShortInfo←{⍵,¨P¨(4+⍴¨⍵)↓¨(INFOSHORT,⊂'')[NAMESSHORT⍳⍵]} ⍝ ⍵ (ShortDesc)
                    ⍝(⍵∊NAMESSHORT)/¨
    AddLongInfo←{⍵,¨D¨{⍵,'[no info available]'/⍨0∊⍴⍵}¨(4+⍴¨⍵)↓¨(INFOLONG,⊂'')[NAMESLONG⍳⍵]} ⍝ ⍵ - LongDesc

      Section←{ ⍝ extract section ⍺:: from code ⍵
          regex←'^\s*⍝\s*',⍺,':(:.*?)$((\R^⍝(?!\s*\w+::).*?$)*)'
          opts←('Mode' 'M')('DotAll' 1)
          res←(regex ⎕S'\1\2'⍠opts)⍵
          (1↓⊃res)~'⍝'
      }

      JSsafe←{ ⍝ Make text JS safe by escaping problematic chars
          fr←'''' '"' '\\' '\n' '\r',⎕UCS 9 8 12               ⍝ ' " \ NL CR TB BS FF
          to←'\\''' '\\"' '\\\\' '\\n' '\\r' '\\t' '\\b' '\\f' ⍝ problematic in regex too :-)
          Q(fr ⎕R to⍠'Mode' 'D')⍵ ⍝ Replace problematic chars and sourround with quotes
      }

    ∇ js←APLtoJS vtv;act;data
      :Access public shared
     ⍝ Convert vectors of pseudo JS (generated by Replace, Execute, et al.) to proper JS
     
      js←''
      :For act data :In eis vtv
          data←JSsafe⊃⌽eis data ⍝ the last or only one
          :Select ⊃eis act      ⍝ the first or only one
          :Case 'assign'
              js,←(⊃⌽act),' = ',data,';' ⍝ variable = "data"
          :Case 'execute'
              js,←'eval(',data,');' ⍝ eval("data")
          :Case 'replace'
              js,←'$("',(⊃⌽act),'").html(',data,');' ⍝ $("#myid").html("data")
          :Else
              js,←'$("',(⊃⌽act),'").',(⊃act),'(',data,');' ⍝ $("#myid").append("data")
          :EndSelect
      :EndFor
    ∇

    :ENDSECTION

    :SECTION MAIN ⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝

    ∇ Compose;left;mid;right;sp;vp;style
      :Access public
     
     ⍝ Initialize globals
      SAMPLES←0 3⍴⍬
      REFS←_html _HTML _DC _JQ _SF
      INFOSHORT←'⍝',¨Dread'Examples/Data/infoShort'
      INFOLONG←'⍝',¨Dread'Examples/Data/infoLong'
      NAMESSHORT←Names INFOSHORT
      NAMESLONG←Names INFOLONG
     ⍝ Use'ejTab' ⍝ May get added by callbacks
     
      '#title'Add _.title'MS3: About' ⍝ After the : will be updated
     
      Add _.StyleSheet'/Styles/homepage.css'
      style←'.pane {background-color:inherit;}'
      style,←'.menu {cursor:pointer;margin-left:2pt;}'
      style,←'.menu:hover {background-color:lightblue;} '
      style,←'.submenu {max-height:100pt;overflow-y:scroll;}'
      style,←'.menuitem {margin-bottom:0;margin-left:13pt;cursor:pointer;} '
      style,←'.menuitem:hover {background-color:lightblue;} '
      style,←'.framed {width:726px;height:400px;border:2px inset;overflow-y:auto;background-color:white;;} '
      style,←'.listitem {margin:8px;cursor:pointer;outline:darkblue auto 5pt;padding-left:2pt;padding-right:2pt}'
      style,←'.listitem:hover {background-color:lightblue;}'
      style,←'.samplesource {overflow-x:auto;width:546pt;background-color:#e5e5cc;border:1px #f0f0e0 solid;}'
      Add _.style style
     
      (left mid)←NewDiv¨'leftBar' 'midBar',¨⊂'.pane' ⍝ Create panes
     
      sp←'mainSP'Horz left mid
      sp.Items[1].style←⊂'width: 200px; max-height: 450px;'
      sp.Items[2].style←⊂'margin: 5px;'
      sp.style←'height: 450px;background-color:inherit;'
     
      vp←Add _.StackPanel sp
      vp.style←'width:100%'
     
      PopulateLeft left
      PopulateMid mid
    ∇

    ∇ PopulateLeft thediv;class;depths;group;items;names;ref;samples;tv;vp;search;case;style;menu;i
     
      ⍝ SEARCH FIELD ⍝⍝⍝
      (search←New _.EditField'str').On'change' 'OnSearch'('str' 'val')
      (case←'#case'New _.button'Search').On'click' 'OnSearch'
      thediv.Add Horz search case
     
      thediv.Add _.hr
     
      ⍝ SAMPLE APPS ⍝⍝⍝
      APPS←(Dlist'Examples/Apps')~⊂'index'
      APPDESCS←(⊂'Description')Section¨Dread¨'Examples/Apps/'∘,¨APPS
      APPCTRLS←(⊂'Control')Section¨Dread¨'Examples/Apps/'∘,¨APPS
      ('#nodeA0' '.menu'thediv.Add _.span'Sample Apps').On'click' 'OnApp'
      (((⊂¨NodeID'A'APPS),¨⊂⊂'.menuitem')thediv.Add¨_.p,¨APPCTRLS).On⊂'click' 'OnApp'
     
      thediv.Add _.hr
     
      ⍝ CONTROLS ⍝⍝⍝
      'style="margin-left:4pt;"'thediv.Add _.span'Controls'
      i←1
      :For (group ref) :InEach GROUPS REFS
          names←{({#.HtmlElement=⊃⊃⌽⎕CLASS ⍵}¨⍵)/⍵}ref.(⍎¨⎕NL ¯9.4)
          class←2↓⍕ref              ⍝ Remove leading #.
          names←(3+⍴class)↓¨⍕¨names ⍝ Remove leading #.class.
          CONTROLS,←⊂names
          depths←1,(⍴names)⍴2
          SAMPLES⍪←depths,(⍪(⊂group),names),(⊂class)
          menu←'.submenu'thediv.Add _.details
          (('#nodeL',⍕i)'.menu'menu.Add _.summary,⊂class,P group).On'click' 'OnControl'
          names←AddShortInfo names ⍝ add short info
          (((⊂¨i NodeID'L'names),¨⊂⊂'.menuitem')menu.Add¨_.p,¨names).On⊂'click' 'OnControl'
          i+←1+⍴names
          names←(⊂group),names
      :EndFor
    ∇

    ∇ r←space FindSamples names;i;samples;suffix
      samples←Dlist SpaceToDir space
      r←(⍴names)⍴⊂''
      :For suffix :In TYPES
          i←(((-⍴suffix)↑¨samples)∊⊂suffix)/⍳⍴samples
          i←{(⍵≤⍴names)/⍵}names⍳(-⍴suffix)↓¨samples[i]
          r[i]←r[i],¨⊂⊂suffix
      :EndFor
    ∇

    ∇ PopulateMid mid;url;code;frame;mya
     
     ⍝ Read framed pages
      url←'Examples/Apps/About'
      code←Dread url
     ⍝ Create and fill placeholder for title header
      mya←('#SampleTitle'mid.Add _.h2).Add NewWinA('Control'Section code)url
     ⍝ Create and fill placeholder for description line
      '#SampleDesc'mid.Add _.p('Description'Section code)
     ⍝ Create and fill placeholder for embedded page
      frame←mid.Add NewDiv'#SampleFrame'
      frame.Add Frame url
      '#SampleSource' '.samplesource'mid.Add _.div,⊂'x-small;border:none'#.HTMLInput.APLToHTMLColour code
    ∇

    :ENDSECTION

    :SECTION CALLBACKS ⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝

    ∇ r←OnApp;node;descs;out;items;time;title;i
      :Access Public
     ⍝ Gets called upon selection in Sample Apps tree
      :If ×node←⍎5↓_what ⍝ ≥1 is an actual app
          r←Update'Examples/Apps'(node⊃APPS)
      :Else ⍝ =0 is the header
          descs←APPCTRLS,¨' – '∘,¨APPDESCS
          out←NewDiv'.framed'
          items←(NodeID'M'APPS)out.Add¨_.p,¨descs
          items.Set⊂'.listitem'
          items.On⊂'click' 'OnApp'
          r←'Apps' 'Sample Apps' 'Small applications to showcase MiServer 3.0 functionality'out''
      :EndIf
      r←GenJS r
    ∇

    ∇ r←OnControl;node;depth;sample;control;space;spacedir;files;out;file;code;ctrlsec;url;iframe;page;desc;title;item;spacectrl;number;names;name;descs;items
      :Access Public
     ⍝ Gets called upon selection in Controls tree
     
     ⍝ Get details
      node←⍎5↓_what ⍝ id="nodeA23" or id="nodeL23" or id="nodeM23"
      depth←⊃SAMPLES[node;1]
      control←depth⊃''(⊃SAMPLES[node;2])(⊃SAMPLES[1⌈1+node-2⍳⍨⌽node↑SAMPLES[;1];2])
      sample←depth⊃'index' ''(control,⊃SAMPLES[node;2])
      space←⊃SAMPLES[node;3]
      spacedir←SpaceToDir space
     
      :Select depth
      :Case 1 ⍝ Group
          number←+/1=SAMPLES[⍳node;1]
          names←number⊃CONTROLS
          descs←AddLongInfo names
          out←NewDiv'.framed'
          items←(node NodeID'M'names)out.Add¨_.p,¨descs
          items.Set⊂'.listitem'
          items.On⊂'click' 'OnControl'
          r←space(space,P number⊃GROUPS)(' controls',⍨⍕⍴names)out''
      :Case 2 ⍝ Element
          spacectrl←space,'.',control
          files←Dlist spacedir
          out←NewDiv'.framed'
          :For file :In files
              url←spacedir,'/',file
              code←Dread url
              ctrlsec←'Control'Section code
              :If (⊂spacectrl)∊Words ctrlsec ⍝ Extract space-separated words
                  desc←⊂'Description'Section code
                  iframe←Frame url
                  title←NewWinA desc,⊂url
                  ctrlsec←New _.em(⍕ctrlsec)
                  desc←∊desc,Type file
                  item←'.listitem'out.Add _.p desc
                  item.On'click' 0 ''(APLtoJS GenJS file title ctrlsec iframe code)
              :EndIf
          :EndFor
          title←1↓control Section INFOSHORT
          title←spacectrl,P title
          desc←control Section INFOLONG
          r←spacectrl title desc out''
      :Else ⍝ Sample (Obsolete)
          r←Update spacedir sample
      :EndSelect
      r←GenJS r
    ∇

    ∇ (page title desc iframe code)←Update(spacedir page);ctrlsec;url
     ⍝ Create new placeholder values
      url←spacedir,'/',page
      iframe←Frame url
      code←Dread url
      ctrlsec←'Control'Section code
      desc←'Description'Section code
      title←'target' 'href'(New _.a ctrlsec).Set'_blank'url
     
    ∇

    ∇ r←GenJS(page title desc iframe code)
     ⍝ Generate JavaScript for filling placeholders
      r←'#title'Replace'MS3: ',page
      r,←'#SampleTitle'Replace title
      r,←'#SampleDesc'Replace desc
      r,←'#SampleFrame'Replace iframe
      r,←'#SampleSource'Replace(×≢code)/'x-small;border:none'#.HTMLInput.APLToHTMLColour code
    ∇

    ∇ r←OnSearch;dir;files;file;code;desc;str;terms;entry;url;ctrlsec;iframe;page;title;item;out;i;time;types;type
      :Access Public
      :If 0∊⍴str←Get'str'  ⍝ get search string
          r←SEARCH         ⍝ re-display old search
      :Else
          time←0.001×3⊃⎕AI ⍝ prepare search statistics
     
      ⍝⍝⍝ Controls
          terms←INFOSHORT/⍨str In INFOSHORT
          terms,←terms~⍨INFOLONG/⍨str In INFOLONG
          terms←'.',¨∪Names terms
      ⍝⍝⍝ Samples
          out←NewDiv'.framed'
          i←0
          :For dir :In 'Apps' 'html' 'HTMLplus' 'DC' 'JQ' 'SF'
              files←Dlist'Examples/',dir
              :For file :In files~⊂'index'
                  url←'Examples/',dir,'/',file
                  code←Dread url
                  desc←⊂'Description'Section code
                  ctrlsec←'Control'Section code
                  :If ∨/str In desc
                  :OrIf ∨/∊(str,terms)⍷¨⊂ctrlsec ⍝ always case sensitive
                      i+←1
                      :If 16≥i
                          iframe←Frame url
                          title←NewWinA url desc
                          ctrlsec←New _.em(⍕ctrlsec)
                          desc←∊desc,Type file
                          item←'.listitem'out.Add _.p desc
                          item.On'click' 0 ''(APLtoJS GenJS file title ctrlsec iframe code)
                      :EndIf
                  :EndIf
              :EndFor
          :EndFor
          page←Q str
          desc←New _.span'Showing results for '
          desc.Add _.em(⍕str)
          desc.Add(×≢terms)/D'including relevant element','s'/⍨1≠≢terms
          desc.Add _.em(⍕1↓¨terms)
          i←(⍕16⌊i),(16<i)/' of ',(⍕i)
          time-⍨←0.001×3⊃⎕AI
          title←(⍕i),' results (',time,' seconds)'
          r←SEARCH←GenJS page title desc out''
      :EndIf
    ∇

    :ENDSECTION

:EndClass