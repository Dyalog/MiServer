:Class index3 : MiPageSample
    :SECTION GLOBALS ⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝

    :Field TYPES←'Simple' 'Advanced'⍝ Types of samples (if not App)
    :Field shared GROUPS← 'Dyalog' 'SyncFusion' 'JQueryUI' 'Base HTML' ⍝ Names of groups of elements
    :Field shared NSS← 'DC' 'SF' 'JQ' 'html' ⍝ NS names of groups of elements
    :field CURRFILES
    :Field REFS        ⍝ ... their refs
    :Field APPS        ⍝ List of all apps
    :Field SAMPLES     ⍝ List of all samples (well, groups and controls really)
    :Field SEARCH←''   ⍝ Last-search cache
    :Field CONTROLS←'' ⍝ All control names
    :Field APPDESCS    ⍝ Sample Apps' Description::
    :Field APPCTRLS    ⍝ Sample Apps' Control:: (i.e. the title)
    :Field CORE        ⍝ Core subset of controls
    :Field STR←''      ⍝ String to search for
    :Field ALLFILES    ⍝ List of pathnames for all sample files
    :Field SAMPLE←1    ⍝ The current view is a sample (i.e. has source-code and related samples)
    :Field shared FILEEXT←'.mipage'⍝ FILEEXT←#.Boot.ms.Config.DefaultExtension ⍝ ore something like that

    :ENDSECTION

    ∇ boacon
      :Access public
      :Implements constructor
      CC 1
    ∇

    ∇ r←lissst aargh
      :Access public
      r←CC aargh
    ∇

    ∇ {r}←CC list;all;b;boolean ⍝ Code Coverage. list is the fns to set
     ⍝ or 1 to initialize all or 0 (stop & clear) or -1 (stop)
      :Access public
      :Trap 6
          {}CodeCov
      :Else
          ⎕SE.SALT.Load'tools\code\codecov'
      :EndTrap
      all←⎕NL-3.1 4.1
      :If 1∊b←¯1 0∊list
          r←CodeCov.CC CCdata,{(⎕MONITOR ⍵)[;2]}¨CCdata[;1]
          →b[1]/0 ⍝ do not reset numbers if ¯1
          →0,⍬∘⎕MONITOR¨all
      :ElseIf list≡1
          list←all~'CC' 'UCMD'
      :EndIf
      boolean←(¯1+⍳999)∘{0::0 ⋄ 1⊣⍺ ⎕MONITOR ⍵}¨list
      list←boolean/list
      r←CCdata←''CodeCov.CCinit⍨⎕CR¨⊂⍣(2>≡list)⊢list
      ⍝(¯1+⍳999)∘⎕MONITOR¨list ⍝ we can't do this inside CCinit
     
    ∇


    :SECTION UTILS ⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝

    ∇ r←{a}Ⓒ w     ⍝ ⊆
      r←⊂⍣(1=≡w)⊢w ⍝ enclose if simple
      →0/⍨900⌶⍬    ⍝ but when dyadic...
      r,⍨←⊂a       ⍝ ... Iverson link
    ∇
    FromCSV←↑{'"'~¨⍨1↓¨t⊂⍨(','=t)∧~≠\'"'=t←',',⍵}¨

    Q←'"'∘,,∘'"'                         ⍝ Surround with quotes, a.k.a. APL dragon
    D←{(×≢⍵)/' – ',⍵}                    ⍝ Prepend a dash if non-empty
    P←{1⌽(×≢#.HTMLInput.dtlb ⍵)/') (',⍵} ⍝ Surround with parens if non-empty

    Of←{⍵/⍨⍺⍺¨⍵}
    NoSt←~∘'*'¨
    SlOf←'/'∘=
    CoreOnly←((⊃,(⊃⌽))(SlOf⊂⊢))¨'*'∘∊Of                ⍝ those ending in * but without middle category
    NameOnly←{1↓⊃⌽(SlOf⊂⊢)path↓⍨-SlOf⊃⌽path←⍵~'*'}     ⍝ between last / and final *
    Levels←{(+/¨SlOf ⍵)+~SlOf(⊃⌽)¨⍵}                   ⍝ number of /s adjusted for categories' final /
    BuildTree←{⍺((⊂⊣),⊢)¨(Levels NoSt ⍵)(NameOnly¨⍵)⍵} ⍝ prepend parent category

    Words←{(1↓¨(∊∘' .'⊂⊢)' ',⍵)~⊂''}                    ⍝ Split at spaces and dots
    Split←{{⍵↑⍨+/∨\' '≠⌽⍵}¨('_'⎕R' ')⍵((⍳↑⊣)Ⓒ(⍳↓⊣))'_'} ⍝ Split at first _ and fix _s

    SpaceToDir←{'Examples/',1↓⍵} ⍝ Convert Space name to Folder name
    NodeToCtrl←{'_',(⊢End 1↓⍵),'.',⌽End ⍵}
    CtrlToNode←{'#',('\.' ⎕R '_')⍵}
      ListItem←{
          nost←⍵~'*'
          noext←~'.'∊nost
          r←'<p class="listitem" id="',nost,(noext/FILEEXT),('*'∩⍵),'"><strong>',Clean NoExt LastSub nost
          ∨/noext,FILEEXT⍷nost:r,'</strong> – ',('Description'Section Dread nost),'</p>'
          r,'</strong></p>'
      }
    NsControl←{1↓¨(⊃Ⓒ(⊃⌽))('/'∘=⊂⊢)⍵}

    Token←{'Currently updating or creating C.(',')',⍨1↓∊' ',¨⍵}
    Missing←{0∊C.⎕NC ⍵}

    Frame←{⍺←⊢ ⋄ ⍺'.iframed'('src=',Q ⍵,'?NoWrapper=1')New _.iframe}
    NewWinA←{'target="_blank"'('href=',Q⊃⌽⍵) 'title="Click to open in a new window"'New _.a (⊃⍵)} ⍝ New link that opens in a new window/tab
    NewDiv←{⍵ New _.div} ⍝ Make a div
    Horz←{⍺←⊢ ⋄ r⊣(r←⍺ New _.StackPanel ⍵).Horizontal←1} ⍝ Horizontal StackPanel

    Type←{P(1⍳⍨∨/¨TYPES⍷¨⊂⍺)⊃(TYPES,¨⊂' sample for ',⍵),⊂'Sample app'} ⍝ Simple/Advanced/App?

    ∇ r←Dread page;i
    ⍝ Read a page via the #.CACHE.DREAD
      :Trap 0
          :If Missing'Dread' ⋄ C.DREAD←⎕NS'' ⋄ C.DREAD.(Keys←Data←⍬) ⋄ :EndIf
          :If (≢C.DREAD.Keys)≥i←C.DREAD.Keys⍳⊂page
              r←i⊃C.DREAD.Data
          :Else
              C.DREAD.Data,←⊂r←#.UnicodeFile.ReadNestedText #.Boot.AppRoot,page,(~'.'∊page)/FILEEXT
              C.DREAD.Keys,←⊂page
          :EndIf
      :Else
          r←,⊂'[failed to read "',page,'"]'
      :EndTrap
    ∇
    Dlist←{0::⍬ ⋄ (Slist #.Boot.AppRoot,⍵,' -raw -ext=',1↓FILEEXT)[;2]} ⍝ List dyalog files
    Slist←{l←⎕SE.SALT.List ⍵ ⋄ l[;2]←('[\\/]+' ⎕R'/')l[;2] ⋄ l}
    ScoreIn←{(100⊥⌽∨/¨TYPES⍷¨⊂⍵)×(⊂⍺)(∊×⍳⍨)Words'Control'Section Dread ⍵} ⍝ ⍺'s relevance in ⍵ (0=none 1=high 2=lower...)
      DirTree←{
          ⍺←1↓FILEEXT
          parent←1(↑Tail ⍵)('/',⍵,'/')
          list←Slist #.Boot.AppRoot,⍵,' -rec -raw -full=2 -ext=',⍺
          0∊⍴list:0 3⍴0 '' ''
          nodir←~list[;1]∊⍨⊂'<DIR>'
          files←list[;2]↓¨⍨¯1+≢#.Boot.AppRoot
          levels←2+(+/¨'/'=files)-+/'/'=3⊃parent
          files,¨←('.',⍺)'/'[1+(list[;1]≡¨⊂'<DIR>')]
          DelEmpty⍣≡parent⍪⍉↑levels(↑Tail¨list[;2])files
      }

    In←{∨/¨⊃⍷¨/{⎕SE.Dyalog.Utils.lcase¨Ⓒ ⍵}¨⍺ ⍵} ⍝ Case-insensitive find

      Info←{
          (ns control)←NsControl ⍵
          C.eoinfo⊂control:C.info[;2]⊃⍨C.infooi⊂control
          'Description'Section ⎕SRC #⍎name}

    Relevant←{C.eocontrols⊂⍵:C.files[C.rankings⊃⍨C.controlsoi⊂⍵] ⋄ 0⍴⊂''}
    Doc←{∊'http://localhost:8080/Documentation/DyalogAPIs/WidgetDoc?namespace=_' '&widget=',¨⍵}

    Tail←{⍵ ⍺⍺⍨1-(⌽⍵)⍳'/'} ⍝ ↑Tail or ↓Tail
    End←{⍺⍺{⍵↑⍨¯1+⍵⍳'_'}⍺⍺ ⍵} ⍝ ⊢End: until first _   ⌽End: from last _
    LastSub←{⍵↑⍨1-'/'⍳⍨⌽⍵}

    Clean←'_'⎕R' '
    NoExt←{'.'∊⍵:⍵↓⍨-'.'⍳⍨⌽⍵⋄⍵}
    DelEmpty←{((0,⍨2</⍵[;1])∨'/'≠⊃¨⌽¨⍵[;3])⌿⍵}

      Section←{ ⍝ extract section ⍺:: from code ⍵
          regex←'^\s*⍝\s*',⍺,':(:.*?)$((\R^⍝(?!\s*\w+::).*?$)*)'
          opts←('Mode' 'M')('DotAll' 1)
          res←(regex ⎕S'\1\2'⍠opts)⍵
          (1↓⊃res)~'⍝'
      }
    Names←{1↓¨⍵↑¨⍨¯1+⍵⍳¨':'} ⍝ Extract section names from set of several 'name:: description'

    :ENDSECTION

    :SECTION MAIN ⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝

    ∇ Compose
      :Access public
      Init
      Add _.StyleSheet'/Styles/homepage.css'
      Add'mainSP'Horz MakeLeft MakeMid
    ∇

    ∇ Init;allscores;ctrlsinfiles;names;list
      C←⍎'#.CACHE'⎕NS ⍬
      CURRCTRL←''
      SAMPLES←0 3⍴⍬
      CURRFILES←⊂'/About_MiServer'
      REFS←#⍎¨'_',¨NSS
      :Hold Token names←'info' 'infooi' 'eoinfo'
          :If Missing names
              C.info←FromCSV Dread'Examples/Data/info.csv'
              C.infooi←C.info[;1]∘⍳ ⋄ C.eoinfo←∊∘(C.info[;1]) ⍝ Save hash tables
          :EndIf
      :EndHold
     
      list←(⍴#.Boot.AppRoot)↓¨⊃⍪/{Slist #.Boot.AppRoot,'Examples/',⍵,' -rec -raw -full=2 -ext=',1↓FILEEXT}¨NSS
      C.files←list[;2]/⍨list[;1]≢¨⊂'<DIR>'
      CORE←⎕SE.SALT.Load #.Boot.AppRoot,'Examples/Data/core -noname'
      :Hold Token names←'controls' 'rankings' 'controlsoi' 'iocontrols'
          :If Missing names
              ctrlsinfiles←{('_',¨NSS)~⍨Words'Control'Section Dread ⍵}¨C.files
              C.controls←∪↑,/ctrlsinfiles
              allscores←C.controls∘.{(102-2×(50↑⊃⌽⍵)⍳⊂⍺)-∨/'Advanced'⍷⊃⍵}↓⍉↑C.files ctrlsinfiles
              C.rankings←(+/0<allscores)↑¨↓⍒⍤1⊢allscores
              C.controlsoi←C.controls∘⍳ ⋄ C.eocontrols←∊∘C.controls ⍝ Save hash tables
          :EndIf
      :EndHold
    ∇

    ∇ tree←MakeTreeGS
      :Access public shared
      tree←⍉⍪1 'Start here'(∊CURRFILES,FILEEXT)
      tree⍪←'pdf'DirTree'Documentation'
      tree⍪←DirTree'Examples/Techniques'
      tree⍪←DirTree'Examples/Applications'
      tree[;2]←Clean¨tree[;2]
    ∇

    ∇ tree←MakeTreeC;nss
      :Access public shared
     
      TREE←(Dread'Examples/Data/tree.txt')~⊂''
      tree←1 'Core' '/*'BuildTree CoreOnly TREE
      tree,¨←1 'All' '/'BuildTree NoSt TREE
     
      nss←(NSS∊⍨2⊃tree)/⍳⍴⊃tree                  ⍝ which ones are roots
      (2⊃tree)[nss]←GROUPS[NSS⍳(2⊃tree)[nss]]    ⍝ replace them with proper names
      tree←⍉↑tree
    ∇

    ∇ left←MakeLeft;sf;sb;tree
      left←NewDiv'#leftBar'
     
      sf←'autofocus='New _.EditField'searchfield' ⍝ SEARCH FIELD ⍝⍝⍝
     ⍝ sf.On'change' 'OnSearch'('str' 'val')   ⍝ Uncomment to enable pressing Enter to search
      sb←'#searchbutton' '.menu'New _.button'Search'
      sb.On'click' 'OnSearch'('str' '#searchfield' 'val')
      left.Add Horz sf sb
     
      left.Add _.hr
     
      '.cat'left.Add _.p'Getting Started' ⍝ GETTING STARTED ⍝⍝⍝
      tree←'#treeG'left.Add _.ejTreeView MakeTreeGS
      tree.On'nodeSelect' 'OnTree'('node' 'eval' 'argument.id')
     
      left.Add _.hr
     
      '.cat'left.Add _.p'Controls' ⍝ CONTROLS ⍝⍝⍝
      tree←'#treeA'left.Add _.ejTreeView MakeTreeC
      tree.On'nodeSelect' 'OnTree'('node' 'eval' 'argument.id')
    ∇

    ∇ mid←MakeMid;url;code;frame;title;navbuts;t;sr;mid;control;sample;attrs;source
      mid←NewDiv'#midBar'
     
      code←Dread url←⊃CURRFILES  ⍝ Read framed pages
     
      title←Clean'Control'Section code ⍝ Create and fill placeholders for title and header
      '#Title'Add _.title('MS3: ',title) ⍝ after the : will be updated later on
     
      '#Header' 'style="display:none;"'mid.Add _.h2 ⍝ Placeholder for a header on category lists and search results
      sample←'#Sample'mid.Add _.div      ⍝ All descriptions will go here
      '#SampleTitle'sample.Add _.strong title ⍝ _html.code
      sample.Add'– '
      '#SampleDesc'sample.Add _.span('Description'Section code) ⍝ Sample: Embed a code fragment
      ('#PopLink'sample.Add _.span).Add NewWinA'Pop out'url     ⍝ [Pop out]
      sample.Add _.br
     
      control←'#Control' 'style="display:none;"'mid.Add _.div                        ⍝ All descriptions will go here
      '#ControlTitle'control.Add _.strong ⍝ _html.code
      control.Add'– '
      '#ControlDesc'control.Add _.span                                              ⍝ Control: Code fragment
      ('#DocLink'control.Add _.span).Add'target="_blank'New _.A'View documentation' ⍝ [View documentation]
      control.Add _.br
     
      attrs←'#ShowRelated' 'onchange=$("#rel").toggle(400)' 'style="margin-left: 0px; margin-top: 10px; margin-bottom: 10px;"'
      attrs control.Add _.Input'checkbox' '' 'Show 0 related samples ' 'right' ⍝ [ ] Show related samples
      '#rel' 'style="display: none;"'control.Add _.div
     
      mid.Add _.hr
      (mid.Add NewDiv'#SampleFrame').Add Frame url ⍝ Placeholder for embedded page and its source code
      mid.Add _.hr
     
      attrs←'onchange=$("#SampleSource").toggle(400)' 'style="margin-left: 0px;"'
      attrs mid.Add _.Input'checkbox' '' 'Show source code' 'right'
      source←'small;border:none'#.HTMLInput.APLToHTMLColour code
      '#SampleSource' '.samplesource' 'style="display: none;"'mid.Add _.div source
    ∇

    :ENDSECTION

    :SECTION CALLBACKS ⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝⍝

    ∇ r←OnTree;node;list;control;nost;ns
      :Access Public ⍝ Callback for the ejTreeViews
      nost←'*'~⍨node←Get'node'
      :If '/'=⊃⌽nost ⍝ Category
          :If 'G'∊_what
              :If ∨/'Documentation'⍷nost
                  r←'pdf'ShowFiles node
              :Else
                  r←ShowFiles node
              :EndIf
          :Else
              r←ShowCat node
          :EndIf
      :ElseIf '.'∊nost ⍝ URL
          r←ShowFile nost
      :Else ⍝ Control
          CURRFILES←Relevant⊃⌽NsControl nost
          :If ×≢CURRFILES
              r←ShowSample nost
          :Else
              r←ShowNone nost
          :EndIf
      :EndIf
    ∇

    ∇ r←OnList
      :Access Public ⍝ Callback for the sample lists
      r←ShowFile _what
    ∇

    ∇ r←OnSearch;terms;urls
      :Access Public
      terms←Words Get'str'
      r←''
      urls←'/',¨∪⊃,/(⊂''),Relevant¨terms
      r,←'#Title'Replace'MS3: ',⍕terms
      r,←'#Header'Replace(⍕≢urls),' samples for <em>',(⍕terms),'<em>'
      r,←'#SampleFrame'Replace∊ListItem¨urls
      r,←'#SampleFrame'Append New _.Handler'.listitem' 'click' 'OnList'
      r,←'#SampleSource'Replace''
      r,←Execute'$("#Header").show()'
      r,←Execute'$("#Control").hide()'
      r,←Execute'$("#Sample").hide()'
    ∇
    :ENDSECTION

    :SECTION SHOW

    ∇ r←ShowFile node;name;url;code;noext;nost
      r←''
      nost←node~'*'
      noext←NoExt nost
      name←Clean LastSub noext
      r,←'#Title'Replace'MS3: ',name
      :If ∨/nost⍷⍨FILEEXT ⍝ a MiPage
          CURRFILES(⊢,~)←⊂noext
          url←⊃CURRFILES
          code←Dread url
          r,←'#SampleTitle'Replace name
          r,←'#SampleDesc'Replace'Description'Section code ⍝ Sample: Embed a code fragment
          r,←'#PopLink'Replace NewWinA'Pop out'url
          r,←'#SampleFrame'Replace Frame nost
          r,←'#SampleSource'Replace'small;border:none'#.HTMLInput.APLToHTMLColour code
          :If ∨/∊TYPES⍷¨⊂nost
              r,←'[for=''ShowRelated'']'Replace{'Show ',(⍕⍵),' related sample','.',⍨'s'/⍨⍵≠1}0⌈¯1+≢CURRFILES
              r,←'#rel'Replace∊ListItem¨1↓CURRFILES,¨'*'
              r,←'#rel'Append New _.Handler'.listitem' 'click' 'OnList'
              r,←Execute'$("#Control").',(⊃'hide' 'show'↓⍨'*'∊node),'()'
          :Else
              r,←Execute'$("#Control").hide()'
          :EndIf
          r,←Execute'$("#Header").hide()'
          r,←Execute'$("#Sample").show()'
      :Else
          r,←'#Header'Replace name
          r,←'#SampleFrame'Replace('width=740 height=900 data=',Q nost)New _.object
          r,←'#SampleSource'Replace''
          r,←Execute'$("#Header").show()'
          r,←Execute'$("#Control").hide()'
          r,←Execute'$("#Sample").hide()'
      :EndIf
    ∇

    ∇ r←ShowNone node;name;ns;control
      r←''
      name←∊'_.',¨(ns control)←NsControl node
      r,←'#Title'Replace'MS3: ',name
      r,←'#SampleTitle'Replace name
      r,←'#ControlDesc'Replace Info control ⍝ Control: Code fragment
      r,←'#DocLink'Replace NewWinA'View documentation'Doc ns control ⍝ [View documentation]
      r,←'#rel'Replace''
      r,←Execute'$("#Header").hide()'
      r,←Execute'$("#Control").show()'
      r,←Execute'$("#Sample").hide()'
      r,←'#SampleFrame'Replace'<p>No samples available for this control</p>'
      r,←'#SampleSource'Replace''
    ∇

    ∇ r←ShowSample node;code;title;url;control;doc;info;ns;name
      r←''
      name←∊'_.',¨(ns control)←NsControl node
      info←Info node
      code←Dread url←⊃CURRFILES ⍝ was set in calling fn
      title←LastSub url
      r,←'#Title'Replace'MS3: ',title
      r,←'#SampleTitle'Replace title
      r,←'#SampleDesc'Replace'Description'Section code
      r,←'#PopLink'Replace NewWinA'Pop out'url
      r,←Execute'$("#Header").hide()'
      :If ∨/'Applications'⍷url ⍝ App
          r,←Execute'$("#Sample").show()'
          r,←Execute'$("#Control").hide()'
      :Else ⍝ Control
          r,←Execute'$("#Control").show()'
          r,←Execute'$("#Sample").show()'
          r,←'#ControlTitle'Replace name
          r,←'#ControlDesc'Replace info ⍝ Control: Code fragment
          r,←'#DocLink'Replace NewWinA'View documentation'Ⓒ Doc ns control⍝ [View documentation]
          r,←'[for=''ShowRelated'']'Replace{'Show ',(⍕⍵),' related sample','.',⍨'s'/⍨⍵≠1}0⌈¯1+≢CURRFILES
          r,←'#rel'Replace∊ListItem¨1↓CURRFILES,¨'*'
          r,←'#rel'Append New _.Handler'.listitem' 'click' 'OnList'
      :EndIf
      r,←'#SampleFrame'Replace Frame url
      r,←'#SampleSource'Replace'small;border:none'#.HTMLInput.APLToHTMLColour code
    ∇

    ∇ r←{ext}ShowFiles node;list;name
      r←''
      :If 900⌶⍬ ⋄ ext←1↓FILEEXT ⋄ :EndIf
      list←Slist #.Boot.AppRoot,node,' -rec -raw -full=2 -ext=',ext
      list←list[;2]/⍨list[;1]≢¨⊂'DIR'
      list←(¯1+≢#.Boot.AppRoot)↓¨list,¨⊂'.',ext
      r,←'#Title'Replace'MS3: ',name←LastSub ¯1↓node
      r,←'#Header'Replace name
      r,←Execute'$("#Header").show()'
      r,←Execute'$("#Control").hide()'
      r,←Execute'$("#Sample").hide()'
      r,←'#SampleFrame'Replace∊ListItem¨{⍵[⍋↑LastSub¨⍵]}list
      r,←'#SampleFrame'Append New _.Handler'.listitem' 'click' 'OnList'
      r,←'#SampleSource'Replace''
    ∇

    ∇ r←ShowCat node;tree;urls;name;core;cats
      r←''
      core←'*'∊node
      tree←NoSt'*'∘∊Of⍣core⊢TREE
      node~←'*'
      urls←∪⊃,/(⊂''),Relevant¨LastSub¨tree/⍨⊃¨node∘⍷¨tree
      cats←1↓¨¯1↓node⊂⍨SlOf node
      (1↑cats)←(GROUPS,⊂'')[NSS⍳1↑cats]
      name←⍕('All' 'Core'⊃⍨1+core)(2↑cats)
      r,←'#Title'Replace'MS3: ',name
      r,←'#Header'Replace name,' Controls'
      r,←Execute'$("#Header").show()'
      r,←Execute'$("#Control").hide()'
      r,←Execute'$("#Sample").hide()'
      r,←'#SampleFrame'Replace∊ListItem¨urls
      r,←'#SampleFrame'Append New _.Handler'.listitem' 'click' 'OnList'
      r,←'#SampleSource'Replace''
    ∇

    :ENDSECTION
:EndClass