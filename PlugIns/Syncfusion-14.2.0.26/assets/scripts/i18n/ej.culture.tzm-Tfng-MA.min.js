ej.addCulture("tzm-Tfng-MA", { name: "tzm-Tfng-MA", englishName: "Central Atlas Tamazight (Tifinagh, Morocco)", nativeName: "ⵜⴰⵎⴰⵣⵉⵖⵜ (ⵍⵎⵖⵔⵉⴱ)", language: "tzm-Tfng", numberFormat: { ",": " ", ".": ",", NaN: "ⵡⴰⵔ ⴰⵎⴹⴰⵏ", negativeInfinity: "-∞", positiveInfinity: "+∞", percent: { ",": " ", ".": "," }, currency: { pattern: ["-n $", "n $"], ",": " ", ".": ",", symbol: "ⴷⵔ" } }, calendars: { standard: { "/": "-", firstDay: 1, days: { names: ["ⴰⵙⴰⵎⴰⵙ", "ⴰⵢⵏⴰⵙ", "ⴰⵙⵉⵏⴰⵙ", "ⴰⴽⵕⴰⵙ", "ⴰⴽⵡⴰⵙ", "ⴰⵙⵉⵎⵡⴰⵙ", "ⴰⵙⵉⴹⵢⴰⵙ"], namesAbbr: ["ⵙⵎⵙ", "ⵢⵏⵙ", "ⵙⵏⵙ", "ⴽⵕⵙ", "ⴽⵡⵙ", "ⵙⵎⵡ", "ⵙⴹⵙ"], namesShort: ["ⵙⵎ", "ⵢⵏ", "ⵙⵏ", "ⴽⵕ", "ⴽⵡ", "ⵙⵡ", "ⵙⴹ"] }, months: { names: ["ⵉⵏⵏⴰⵢⵔ", "ⴱⵕⴰⵢⵕ", "ⵎⴰⵕⵚ", "ⵉⴱⵔⵉⵔ", "ⵎⴰⵢⵢⵓ", "ⵢⵓⵏⵢⵓ", "ⵢⵓⵍⵢⵓⵣ", "ⵖⵓⵛⵜ", "ⵛⵓⵜⴰⵏⴱⵉⵔ", "ⴽⵜⵓⴱⵕ", "ⵏⵓⵡⴰⵏⴱⵉⵔ", "ⴷⵓⵊⴰⵏⴱⵉⵔ", ""], namesAbbr: ["ⵏⵢⵔ", "ⴱⵕⵢ", "ⵎⵕⵚ", "ⴱⵔⵔ", "ⵎⵢⵢ", "ⵢⵏⵢ", "ⵢⵍⵢ", "ⵖⵛⵜ", "ⵛⵜⵏ", "ⴽⵜⴱ", "ⵏⵡⴱ", "ⴷⵊⵏ", ""] }, AM: null, PM: null, patterns: { d: "dd-MM-yyyy", D: "dddd, dd MMMM, yyyy", t: "H:mm", T: "H:mm:ss", f: "dddd, dd MMMM, yyyy H:mm", F: "dddd, dd MMMM, yyyy H:mm:ss", M: "dd MMMM", Y: "MMMM, yyyy" } }, Hijri: { name: "Hijri", "/": "-", firstDay: 1, days: { names: ["ⴰⵙⴰⵎⴰⵙ", "ⴰⵢⵏⴰⵙ", "ⴰⵙⵉⵏⴰⵙ", "ⴰⴽⵕⴰⵙ", "ⴰⴽⵡⴰⵙ", "ⴰⵙⵉⵎⵡⴰⵙ", "ⴰⵙⵉⴹⵢⴰⵙ"], namesAbbr: ["ⵙⵎⵙ", "ⵢⵏⵙ", "ⵙⵏⵙ", "ⴽⵕⵙ", "ⴽⵡⵙ", "ⵙⵎⵡ", "ⵙⴹⵙ"], namesShort: ["ⵙⵎ", "ⵢⵏ", "ⵙⵏ", "ⴽⵕ", "ⴽⵡ", "ⵙⵡ", "ⵙⴹ"] }, months: { names: ["ⵎⵓⵃⴰⵕⵕⴰⵎ", "ⵚⴰⴼⴰⵕ", "ⵕⴰⴱⵉⵄ ⵍⵡⵡⵍ (ⵕⴰⴱⵉⵄ 1)", "ⵕⴰⴱⵉⵄ ⵜⵜⴰⵏⵉ (ⵕⴰⴱⵉⵄ 2)", "ⵊⵓⵎⴰⴷⴰ ⵍⵡⵡⵍ (ⵊⵓⵎⴰⴷⴰ 1)", "ⵊⵓⵎⴰⴷⴰ ⵜⵜⴰⵏⵉ (ⵊⵓⵎⴰⴷⴰ 2)", "ⵕⴰⵊⴰⴱ", "ⵛⵄⴱⴰⵏ", "ⵕⵎⴹⴰⵏ", "ⵛⵡⵡⴰⵍ", "ⴷⵓ ⵍⵇⵉⵄⴷⴰ", "ⴷⵓ ⵍⵃⵉⵊⵊⴰ", ""], namesAbbr: ["ⵎⵓⵃⴰⵕⵕⴰⵎ", "ⵚⴰⴼⴰⵕ", "ⵕⴰⴱⵉⵄ ⵍⵡⵡⵍ (ⵕⴰⴱⵉⵄ 1)", "ⵕⴰⴱⵉⵄ ⵜⵜⴰⵏⵉ (ⵕⴰⴱⵉⵄ 2)", "ⵊⵓⵎⴰⴷⴰ ⵍⵡⵡⵍ (ⵊⵓⵎⴰⴷⴰ 1)", "ⵊⵓⵎⴰⴷⴰ ⵜⵜⴰⵏⵉ (ⵊⵓⵎⴰⴷⴰ 2)", "ⵕⴰⵊⴰⴱ", "ⵛⵄⴱⴰⵏ", "ⵕⵎⴹⴰⵏ", "ⵛⵡⵡⴰⵍ", "ⴷⵓ ⵍⵇⵉⵄⴷⴰ", "ⴷⵓ ⵍⵃⵉⵊⵊⴰ", ""] }, AM: null, PM: null, twoDigitYearMax: 1451, patterns: { d: "dd-MM-yyyy", D: "dd MMMM, yyyy", t: "H:mm", T: "H:mm:ss", f: "dd MMMM, yyyy H:mm", F: "dd MMMM, yyyy H:mm:ss", M: "d MMMM", Y: "MMMM, yyyy" }, convert: { ticks1970: 621355968e5, monthDays: [0, 30, 59, 89, 118, 148, 177, 207, 236, 266, 295, 325, 355], minDate: -425216736e5, maxDate: 0xe677d21fdbff, hijriAdjustment: 0, toGregorian: function (t, e, a) { var n = this.daysToYear(t) + this.monthDays[e] + a - 1 - this.hijriAdjustment, s = new Date(864e5 * n - this.ticks1970); return s.setMinutes(s.getMinutes() + s.getTimezoneOffset()), s }, fromGregorian: function (t) { if (t < this.minDate || t > this.maxDate) return null; var e, a, n = this.ticks1970 + (t - 0) - 6e4 * t.getTimezoneOffset(), s = Math.floor(n / 864e5) + 1 + this.hijriAdjustment, r = Math.floor(30 * (s - 227013) / 10631) + 1, M = this.daysToYear(r), i = this.isLeapYear(r) ? 355 : 354; M > s ? (r--, M -= i) : s === M ? (r--, M = this.daysToYear(r)) : s > M + i && (M += i, r++), a = 0; for (var y = s - M; 11 >= a && y > this.monthDays[a];) a++; return a--, e = y - this.monthDays[a], [r, a, e] }, daysToYear: function (t) { for (var e = 30 * Math.floor((t - 1) / 30), a = t - e - 1, n = Math.floor(10631 * e / 30) + 227013; a > 0;) n += this.isLeapYear(a) ? 355 : 354, a--; return n }, isLeapYear: function (t) { return 11 > (11 * t + 14) % 30 } } } } });