ej.addCulture("wo", { name: "wo", englishName: "Wolof", nativeName: "Wolof", language: "wo", numberFormat: { ",": " ", ".": ",", NaN: "Non Numérique", negativeInfinity: "-Infini", positiveInfinity: "+Infini", percent: { ",": " ", ".": "," }, currency: { pattern: ["-n $", "n $"], ",": " ", ".": ",", symbol: "XOF" } }, calendars: { standard: { firstDay: 1, days: { names: ["Dibéer", "Altine", "Talaata", "Àllarba", "Alxames", "Àjjuma", "Gaawu"], namesAbbr: ["Dib.", "Alt.", "Tal.", "Àll.", "Alx.", "Àjj.", "Gaa."], namesShort: ["Di", "Al", "Ta", "Àl", "Ax", "Àj", "Ga"] }, months: { names: ["Samwiye", "Fewriye", "Maars", "Awril", "Me", "Suwe", "Sullet", "Ut", "Septàmbar", "Oktoobar", "Noowàmbar", "Desàmbar", ""], namesAbbr: ["Sam.", "Few.", "Maa", "Awr.", "Me", "Suw", "Sul.", "Ut", "Sept.", "Okt.", "Now.", "Des.", ""] }, monthsGenitive: { names: ["Samwiye", "Fewriye", "Maars", "Awril", "Me", "Suwe", "Sullet", "Ut", "Septàmbar", "Oktoobar", "Noowàmbar", "Deesàmbar", ""], namesAbbr: ["Sam.", "Few.", "Maa", "Awr.", "Me", "Suwe", "Sul.", "Ut", "Sept.", "Okt.", "Noow.", "Des.", ""] }, AM: null, PM: null, patterns: { d: "dd/MM/yyyy", D: "dddd d MMMM yyyy", t: "HH:mm", T: "HH:mm:ss", f: "dddd d MMMM yyyy HH:mm", F: "dddd d MMMM yyyy HH:mm:ss", M: "d MMMM" } }, Hijri: { name: "Hijri", firstDay: 1, days: { names: ["Dibéer", "Altine", "Talaata", "Àllarba", "Alxames", "Àjjuma", "Gaawu"], namesAbbr: ["Dib.", "Alt.", "Tal.", "Àll.", "Alx.", "Àjj.", "Gaa."], namesShort: ["Di", "Al", "Ta", "At", "Ax", "Àj", "Ga"] }, months: { names: ["Tamxarit", "Màggal", "Gàmmu", "Rakki-gàmmu", "Rakkaati-gàmmu", "Maami-koor", "Ndeyi-koor", "Baraxlu", "Koor", "Kori", "Diggi-tabaski", "Tabaski", ""], namesAbbr: ["Tamxarit", "Màggal", "Gàmmu", "Rakki-gàmmu", "Rakkaati-gàmmu", "Maami-koor", "Ndeyi-koor", "Baraxlu", "Koor", "Kori", "Diggi-tabaski", "Tabaski", ""] }, AM: null, PM: null, twoDigitYearMax: 1451, patterns: { d: "dd/MM/yyyy", D: "dddd d MMMM yyyy", t: "HH:mm", T: "HH:mm:ss", f: "dddd d MMMM yyyy HH:mm", F: "dddd d MMMM yyyy HH:mm:ss", M: "d MMMM" }, convert: { ticks1970: 621355968e5, monthDays: [0, 30, 59, 89, 118, 148, 177, 207, 236, 266, 295, 325, 355], minDate: -425216736e5, maxDate: 0xe677d21fdbff, hijriAdjustment: 0, toGregorian: function (a, e, t) { var i = this.daysToYear(a) + this.monthDays[e] + t - 1 - this.hijriAdjustment, r = new Date(864e5 * i - this.ticks1970); return r.setMinutes(r.getMinutes() + r.getTimezoneOffset()), r }, fromGregorian: function (a) { if (a < this.minDate || a > this.maxDate) return null; var e, t, i = this.ticks1970 + (a - 0) - 6e4 * a.getTimezoneOffset(), r = Math.floor(i / 864e5) + 1 + this.hijriAdjustment, m = Math.floor(30 * (r - 227013) / 10631) + 1, s = this.daysToYear(m), n = this.isLeapYear(m) ? 355 : 354; s > r ? (m--, s -= n) : r === s ? (m--, s = this.daysToYear(m)) : r > s + n && (s += n, m++), t = 0; for (var o = r - s; 11 >= t && o > this.monthDays[t];) t++; return t--, e = o - this.monthDays[t], [m, t, e] }, daysToYear: function (a) { for (var e = 30 * Math.floor((a - 1) / 30), t = a - e - 1, i = Math.floor(10631 * e / 30) + 227013; t > 0;) i += this.isLeapYear(t) ? 355 : 354, t--; return i }, isLeapYear: function (a) { return 11 > (11 * a + 14) % 30 } } } } });