ej.addCulture("az-Latn-AZ", { name: "az-Latn-AZ", englishName: "Azerbaijani (Latin, Azerbaijan)", nativeName: "Azərbaycan dili (Azərbaycan)", language: "az-Latn", numberFormat: { ",": " ", ".": ",", percent: { pattern: ["-n%", "n%"], ",": " ", ".": "," }, currency: { pattern: ["-n $", "n $"], ",": " ", ".": ",", symbol: "manat" } }, calendars: { standard: { "/": ".", firstDay: 1, days: { names: ["bazar", "Bazar ertəsi", "çərşənbə axşamı", "çərşənbə", "Cümə axşamı", "Cümə", "şənbə"], namesAbbr: ["B", "Be", "Ça", "Ç", "Ca", "C", "Ş"], namesShort: ["B", "Be", "Ça", "Ç", "Ca", "C", "Ş"] }, months: { names: ["yanvar", "fevral", "mart", "aprel", "may", "iyun", "iyul", "avgust", "sentyabr", "oktyabr", "noyabr", "dekabr", ""], namesAbbr: ["Yan", "Fev", "Mar", "Apr", "May", "İyun", "İyul", "Avg", "Sen", "Okt", "Noy", "Dek", ""] }, AM: null, PM: null, patterns: { d: "dd.MM.yyyy", D: "dd MMMM yyyy'-cü il'", t: "HH:mm", T: "HH:mm:ss", f: "dd MMMM yyyy'-cü il' HH:mm", F: "dd MMMM yyyy'-cü il' HH:mm:ss", M: "d MMMM" } }, Hijri: { name: "Hijri", "/": ".", firstDay: 1, days: { names: ["Bazar", "Bazar ertəsi", "Çərşənbə axşamı", "Çərşənbə", "Cümə axşamı", "Cümə", "Şənbə"], namesAbbr: ["B", "Be", "Ça", "Ç", "Ca", "C", "Ş"], namesShort: ["B", "Be", "Ça", "Ç", "Ca", "C", "Ş"] }, months: { names: ["Məhərrəm", "Səfər", "Rəbiüləvvəl", "Rəbiülaxır", "Cəmadiyələvvəl", "Cəmadiyəlaxır", "Rəcəb", "Şaban", "Ramazan", "Şəvval", "Zilqədə", "Zilhiccə", ""], namesAbbr: ["Məhərrəm", "Səfər", "Rəbiüləvvəl", "Rəbiülaxır", "Cəmadiyələvvəl", "Cəmadiyəlaxır", "Rəcəb", "Şaban", "Ramazan", "Şəvval", "Zilqədə", "Zilhiccə", ""] }, AM: null, PM: null, twoDigitYearMax: 1451, patterns: { d: "dd.MM.yyyy", D: "d MMMM yyyy", t: "HH:mm", T: "HH:mm:ss", f: "d MMMM yyyy HH:mm", F: "d MMMM yyyy HH:mm:ss", M: "d MMMM" }, convert: { ticks1970: 621355968e5, monthDays: [0, 30, 59, 89, 118, 148, 177, 207, 236, 266, 295, 325, 355], minDate: -425216736e5, maxDate: 0xe677d21fdbff, hijriAdjustment: 0, toGregorian: function (a, r, n) { var t = this.daysToYear(a) + this.monthDays[r] + n - 1 - this.hijriAdjustment, e = new Date(864e5 * t - this.ticks1970); return e.setMinutes(e.getMinutes() + e.getTimezoneOffset()), e }, fromGregorian: function (a) { if (a < this.minDate || a > this.maxDate) return null; var r, n, t = this.ticks1970 + (a - 0) - 6e4 * a.getTimezoneOffset(), e = Math.floor(t / 864e5) + 1 + this.hijriAdjustment, i = Math.floor(30 * (e - 227013) / 10631) + 1, s = this.daysToYear(i), m = this.isLeapYear(i) ? 355 : 354; s > e ? (i--, s -= m) : e === s ? (i--, s = this.daysToYear(i)) : e > s + m && (s += m, i++), n = 0; for (var y = e - s; 11 >= n && y > this.monthDays[n];) n++; return n--, r = y - this.monthDays[n], [i, n, r] }, daysToYear: function (a) { for (var r = 30 * Math.floor((a - 1) / 30), n = a - r - 1, t = Math.floor(10631 * r / 30) + 227013; n > 0;) t += this.isLeapYear(n) ? 355 : 354, n--; return t }, isLeapYear: function (a) { return 11 > (11 * a + 14) % 30 } } } } });