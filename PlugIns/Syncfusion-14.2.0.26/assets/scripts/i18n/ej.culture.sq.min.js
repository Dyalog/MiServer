ej.addCulture("sq", { name: "sq", englishName: "Albanian", nativeName: "Shqip", language: "sq", numberFormat: { ",": ".", ".": ",", negativeInfinity: "-infinit", positiveInfinity: "+infinit", percent: { ",": ".", ".": "," }, currency: { pattern: ["-n $", "n $"], ",": ".", ".": ",", symbol: "Lek" } }, calendars: { standard: { "/": ".", firstDay: 1, days: { names: ["e diel", "e hënë", "e martë", "e mërkurë", "e enjte", "e premte", "e shtunë"], namesAbbr: ["Die", "Hën", "Mar", "Mër", "Enj", "Pre", "Sht"], namesShort: ["D", "H", "M", "M", "E", "P", "Sh"] }, months: { names: ["janar", "shkurt", "mars", "prill", "maj", "qershor", "korrik", "gusht", "shtator", "tetor", "nëntor", "dhjetor", ""], namesAbbr: ["Jan", "Shk", "Mar", "Pri", "Maj", "Qer", "Krr", "Gsh", "Sht", "Tet", "Nën", "Dhj", ""] }, AM: ["PD", "pd", "PD"], PM: ["MD", "md", "MD"], patterns: { d: "d.M.yyyy", D: "dddd, d MMMM yyyy", t: "HH:mm", T: "HH:mm:ss", f: "dddd, d MMMM yyyy HH:mm", F: "dddd, d MMMM yyyy HH:mm:ss", M: "d MMMM" } }, Hijri: { name: "Hijri", "/": ".", firstDay: 1, days: { names: ["e diel", "e hënë", "e martë", "e mërkurë", "e enjte", "e premte", "e shtunë"], namesAbbr: ["Die", "Hën", "Mar", "Mër", "Enj", "Pre", "Sht"], namesShort: ["H", "M", "M", "E", "P", "Sh", "D"] }, months: { names: ["Muharrem", "Safer", "Rabiulevvel", "Rabiulahir", "Xhemadilevvel", "Xhemadilahir", "Rexhep", "Shaban", "Ramazan", "Sheval", "Dhulkade", "Dhulhixhxhe", ""], namesAbbr: ["Muharrem", "Safer", "Rabiulevvel", "Rabiulahir", "Xhemadilevvel", "Xhemadilahir", "Rexhep", "Shaban", "Ramazan", "Sheval", "Dhulkade", "Dhulhixhxhe", ""] }, AM: ["PD", "pd", "PD"], PM: ["MD", "md", "MD"], twoDigitYearMax: 1451, patterns: { d: "d.M.yyyy", D: "dddd, d MMMM yyyy", t: "HH:mm", T: "HH:mm:ss", f: "dddd, d MMMM yyyy HH:mm", F: "dddd, d MMMM yyyy HH:mm:ss", M: "d MMMM" }, convert: { ticks1970: 621355968e5, monthDays: [0, 30, 59, 89, 118, 148, 177, 207, 236, 266, 295, 325, 355], minDate: -425216736e5, maxDate: 0xe677d21fdbff, hijriAdjustment: 0, toGregorian: function (e, a, t) { var r = this.daysToYear(e) + this.monthDays[a] + t - 1 - this.hijriAdjustment, n = new Date(864e5 * r - this.ticks1970); return n.setMinutes(n.getMinutes() + n.getTimezoneOffset()), n }, fromGregorian: function (e) { if (e < this.minDate || e > this.maxDate) return null; var a, t, r = this.ticks1970 + (e - 0) - 6e4 * e.getTimezoneOffset(), n = Math.floor(r / 864e5) + 1 + this.hijriAdjustment, i = Math.floor(30 * (n - 227013) / 10631) + 1, s = this.daysToYear(i), h = this.isLeapYear(i) ? 355 : 354; s > n ? (i--, s -= h) : n === s ? (i--, s = this.daysToYear(i)) : n > s + h && (s += h, i++), t = 0; for (var m = n - s; 11 >= t && m > this.monthDays[t];) t++; return t--, a = m - this.monthDays[t], [i, t, a] }, daysToYear: function (e) { for (var a = 30 * Math.floor((e - 1) / 30), t = e - a - 1, r = Math.floor(10631 * a / 30) + 227013; t > 0;) r += this.isLeapYear(t) ? 355 : 354, t--; return r }, isLeapYear: function (e) { return 11 > (11 * e + 14) % 30 } } } } });