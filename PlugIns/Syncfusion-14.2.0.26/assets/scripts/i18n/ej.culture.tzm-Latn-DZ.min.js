ej.addCulture("tzm-Latn-DZ", { name: "tzm-Latn-DZ", englishName: "Central Atlas Tamazight (Latin, Algeria)", nativeName: "Tamazight (Djazaïr)", language: "tzm-Latn", numberFormat: { ",": " ", ".": ",", NaN: "war amdhan", negativeInfinity: "-ifedh", positiveInfinity: "+ifedh", percent: { ",": " ", ".": "," }, currency: { pattern: ["-n $", "n $"], ",": " ", ".": ",", symbol: "DZD" } }, calendars: { standard: { "/": "-", firstDay: 6, days: { names: ["lh'ed", "letnayen", "ttlata", "larebâa", "lexmis", "ldjemâa", "ssebt"], namesAbbr: ["lh'd", "let", "ttl", "lar", "lex", "ldj", "sse"], namesShort: ["lh", "lt", "tt", "la", "lx", "ld", "ss"] }, months: { names: ["Yennayer", "Furar", "Meghres", "Yebrir", "Magu", "Yunyu", "Yulyu", "Ghuct", "Cutenber", "Tuber", "Nunember", "Dujanbir", ""], namesAbbr: ["Yen", "Fur", "Megh", "Yeb", "May", "Yun", "Yul", "Ghu", "Cut", "Tub", "Nun", "Duj", ""] }, AM: null, PM: null, patterns: { d: "dd-MM-yyyy", D: "dd MMMM, yyyy", t: "H:mm", T: "H:mm:ss", f: "dd MMMM, yyyy H:mm", F: "dd MMMM, yyyy H:mm:ss", M: "d MMMM", Y: "MMMM, yyyy" } }, Hijri: { name: "Hijri", "/": "-", firstDay: 6, days: { names: ["Acer", "Arime", "Aram", "Ahad", "Amhadh", "Sem", "Sedh"], namesAbbr: ["Ace", "Ari", "Ara", "Aha", "Amh", "Sem", "Sed"], namesShort: ["Ac", "Ar", "Ar", "Ah", "Am", "Se", "Se"] }, months: { names: ["Muharram", "Safar", "Rabiâ al-awwal (Rabiâ I)", "Rabiâ al-thani (Rabiâ II)", "Jumada al-oula (Jumada I)", "Jumada al-thania (Jumada II)", "Radjab", "Chaâban", "Ramadan", "Chawwal", "Dhu al-Qiâda", "Dhu al-Hijjah", ""], namesAbbr: ["Muh", "Saf", "Ra-I", "Ra-II", "Ju-I", "Ju-II", "Raj", "Cha", "Ram", "Chw", "Qiâ", "Hij", ""] }, AM: null, PM: null, twoDigitYearMax: 1451, patterns: { d: "dd-MM-yyyy", D: "dd MMMM, yyyy", t: "H:mm", T: "H:mm:ss", f: "dd MMMM, yyyy H:mm", F: "dd MMMM, yyyy H:mm:ss", M: "d MMMM", Y: "MMMM, yyyy" }, convert: { ticks1970: 621355968e5, monthDays: [0, 30, 59, 89, 118, 148, 177, 207, 236, 266, 295, 325, 355], minDate: -425216736e5, maxDate: 0xe677d21fdbff, hijriAdjustment: 0, toGregorian: function (a, e, t) { var n = this.daysToYear(a) + this.monthDays[e] + t - 1 - this.hijriAdjustment, r = new Date(864e5 * n - this.ticks1970); return r.setMinutes(r.getMinutes() + r.getTimezoneOffset()), r }, fromGregorian: function (a) { if (a < this.minDate || a > this.maxDate) return null; var e, t, n = this.ticks1970 + (a - 0) - 6e4 * a.getTimezoneOffset(), r = Math.floor(n / 864e5) + 1 + this.hijriAdjustment, i = Math.floor(30 * (r - 227013) / 10631) + 1, s = this.daysToYear(i), m = this.isLeapYear(i) ? 355 : 354; s > r ? (i--, s -= m) : r === s ? (i--, s = this.daysToYear(i)) : r > s + m && (s += m, i++), t = 0; for (var M = r - s; 11 >= t && M > this.monthDays[t];) t++; return t--, e = M - this.monthDays[t], [i, t, e] }, daysToYear: function (a) { for (var e = 30 * Math.floor((a - 1) / 30), t = a - e - 1, n = Math.floor(10631 * e / 30) + 227013; t > 0;) n += this.isLeapYear(t) ? 355 : 354, t--; return n }, isLeapYear: function (a) { return 11 > (11 * a + 14) % 30 } } } } });