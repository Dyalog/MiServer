ej.addCulture("tk-TM", { name: "tk-TM", englishName: "Turkmen (Turkmenistan)", nativeName: "Türkmen dili (Türkmenistan)", language: "tk", numberFormat: { ",": " ", ".": ",", negativeInfinity: "-tükeniksizlik", positiveInfinity: "tükeniksizlik", percent: { pattern: ["-n%", "n%"], ",": " ", ".": "," }, currency: { pattern: ["-n$", "n$"], ",": " ", ".": ",", symbol: "m." } }, calendars: { standard: { "/": ".", firstDay: 1, days: { names: ["Ýekşenbe", "Duşenbe", "Sişenbe", "Çarşenbe", "Penşenbe", "Anna", "Şenbe"], namesAbbr: ["Ýb", "Db", "Sb", "Çb", "Pb", "An", "Şb"], namesShort: ["Ý", "D", "S", "Ç", "P", "A", "Ş"] }, months: { names: ["Ýanwar", "Fewral", "Mart", "Aprel", "Maý", "lýun", "lýul", "Awgust", "Sentýabr", "Oktýabr", "Noýabr", "Dekabr", ""], namesAbbr: ["Ýan", "Few", "Mart", "Apr", "Maý", "lýun", "lýul", "Awg", "Sen", "Okt", "Noý", "Dek", ""] }, AM: null, PM: null, patterns: { d: "dd.MM.yy 'ý.'", D: "yyyy'-nji ýylyň 'd'-nji 'MMMM", t: "HH:mm", T: "HH:mm:ss", f: "yyyy'-nji ýylyň 'd'-nji 'MMMM HH:mm", F: "yyyy'-nji ýylyň 'd'-nji 'MMMM HH:mm:ss", M: "d MMMM", Y: "yyyy 'ý.' MMMM" } }, Hijri: { name: "Hijri", "/": ".", firstDay: 1, days: { names: ["Duşenbe", "Sişenbe", "Çarşenbe", "Penşenbe", "Anna", "Şenbe", "Ýekşenbe"], namesAbbr: ["Db", "Sb", "Çb", "Pb", "An", "Şb", "Ýb"], namesShort: ["D", "S", "Ç", "P", "A", "Ş", "Ý"] }, months: { names: ["Aşyr", "Sapar", "Rebiül-ewwel", "Rebiül-ahyr", "Jemaziýel-ewwel", "Jemaziýel-ahyr", "Rejep", "Meret", "Remezan", "Baýram", "Zilkade", "Gurban", ""], namesAbbr: ["Aşy", "Sap", "Rbe", "Rba", "Jme", "Jma", "Rej", "Mer", "Rem", "Baý", "Zil", "Gur", ""] }, AM: null, PM: null, twoDigitYearMax: 1451, patterns: { d: "dd.MM.yy", D: "yyyy 'ý.' MMMM d", t: "HH:mm", T: "HH:mm:ss", f: "yyyy 'ý.' MMMM d HH:mm", F: "yyyy 'ý.' MMMM d HH:mm:ss", M: "dd MMMM", Y: "yyyy 'ý.' MMMM" }, convert: { ticks1970: 621355968e5, monthDays: [0, 30, 59, 89, 118, 148, 177, 207, 236, 266, 295, 325, 355], minDate: -425216736e5, maxDate: 0xe677d21fdbff, hijriAdjustment: 0, toGregorian: function (e, n, a) { var t = this.daysToYear(e) + this.monthDays[n] + a - 1 - this.hijriAdjustment, r = new Date(864e5 * t - this.ticks1970); return r.setMinutes(r.getMinutes() + r.getTimezoneOffset()), r }, fromGregorian: function (e) { if (e < this.minDate || e > this.maxDate) return null; var n, a, t = this.ticks1970 + (e - 0) - 6e4 * e.getTimezoneOffset(), r = Math.floor(t / 864e5) + 1 + this.hijriAdjustment, i = Math.floor(30 * (r - 227013) / 10631) + 1, s = this.daysToYear(i), M = this.isLeapYear(i) ? 355 : 354; s > r ? (i--, s -= M) : r === s ? (i--, s = this.daysToYear(i)) : r > s + M && (s += M, i++), a = 0; for (var y = r - s; 11 >= a && y > this.monthDays[a];) a++; return a--, n = y - this.monthDays[a], [i, a, n] }, daysToYear: function (e) { for (var n = 30 * Math.floor((e - 1) / 30), a = e - n - 1, t = Math.floor(10631 * n / 30) + 227013; a > 0;) t += this.isLeapYear(a) ? 355 : 354, a--; return t }, isLeapYear: function (e) { return 11 > (11 * e + 14) % 30 } } } } });