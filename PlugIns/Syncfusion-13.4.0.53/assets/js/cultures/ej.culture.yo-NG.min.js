ej.addCulture("yo-NG", { name: "yo-NG", englishName: "Yoruba (Nigeria)", nativeName: "Yoruba (Nigeria)", language: "yo", numberFormat: { currency: { pattern: ["-$ n", "$ n"], symbol: "₦" } }, calendars: { standard: { name: "Hijri", days: { names: ["Àìkú", "Ajé", "Ìṣẹ́gun", "Ọjọ́'rú", "Ọjọ́'bọ̀", "Ẹtì", "Àbámẹ́ta"], namesAbbr: ["Àìk", "Ajé", "Ìṣg", "Ọjr", "Ọjb", "Ẹti", "Àbá"], namesShort: ["Àì", "Aj", "Ìṣ", "Ọj", "Ọb", "Ẹt", "Àb"] }, months: { names: ["Oṣu Muharram", "Oṣu Safar", "Oṣu R Awwal", "Oṣu R Aakhir", "Oṣu J Awwal", "Oṣu J Aakhira", "Oṣu Rajab", "Oṣu Sha'baan", "Oṣu Ramadhan", "Oṣu Shawwal", "Oṣu Dhul Qa'dah", "Oṣu Dhul Hijjah", ""], namesAbbr: ["Oṣu Muharram", "Oṣu Safar", "Oṣu R Awwal", "Oṣu R Aakhir", "Oṣu J Awwal", "Oṣu J Aakhira", "Oṣu Rajab", "Oṣu Sha'baan", "Oṣu Ramadhan", "Oṣu Shawwal", "Oṣu Dhul Qa'dah", "Oṣu Dhul Hijjah", ""] }, AM: ["Òwúrọ́", "òwúrọ́", "ÒWÚRỌ́"], PM: ["Alẹ̀", "alẹ̀", "ALẸ̀"], twoDigitYearMax: 1451, patterns: { d: "d/M/yyyy", D: "dddd, dd MMMM, yyyy", f: "dddd, dd MMMM, yyyy h:mm tt", F: "dddd, dd MMMM, yyyy h:mm:ss tt", M: "dd MMMM", Y: "MMMM,yyyy" }, convert: { ticks1970: 621355968e5, monthDays: [0, 30, 59, 89, 118, 148, 177, 207, 236, 266, 295, 325, 355], minDate: -425216736e5, maxDate: 0xe677d21fdbff, hijriAdjustment: 0, toGregorian: function (a, t, r) { var e = this.daysToYear(a) + this.monthDays[t] + r - 1 - this.hijriAdjustment, n = new Date(864e5 * e - this.ticks1970); return n.setMinutes(n.getMinutes() + n.getTimezoneOffset()), n }, fromGregorian: function (a) { if (a < this.minDate || a > this.maxDate) return null; var t, r, e = this.ticks1970 + (a - 0) - 6e4 * a.getTimezoneOffset(), n = Math.floor(e / 864e5) + 1 + this.hijriAdjustment, d = Math.floor(30 * (n - 227013) / 10631) + 1, s = this.daysToYear(d), i = this.isLeapYear(d) ? 355 : 354; s > n ? (d--, s -= i) : n === s ? (d--, s = this.daysToYear(d)) : n > s + i && (s += i, d++), r = 0; for (var u = n - s; 11 >= r && u > this.monthDays[r];) r++; return r--, t = u - this.monthDays[r], [d, r, t] }, daysToYear: function (a) { for (var t = 30 * Math.floor((a - 1) / 30), r = a - t - 1, e = Math.floor(10631 * t / 30) + 227013; r > 0;) e += this.isLeapYear(r) ? 355 : 354, r--; return e }, isLeapYear: function (a) { return 11 > (11 * a + 14) % 30 } } }, Gregorian_Localized: { days: { names: ["Àìkú", "Ajé", "Ìṣẹ́gun", "Ọjọ́'rú", "Ọjọ́'bọ̀", "Ẹtì", "Àbámẹ́ta"], namesAbbr: ["Àìk", "Ajé", "Ìṣg", "Ọjr", "Ọjb", "Ẹti", "Àbá"], namesShort: ["Àì", "Aj", "Ìṣ", "Ọj", "Ọb", "Ẹt", "Àb"] }, months: { names: ["Ṣẹ́ẹ́rẹ́", "Erèlé", "Ẹrẹ́nà", "Igbe", "Èbìbí", "Okúdù", "Agẹmọ", "Ògún", "Ọwẹ́wẹ̀", "Ọ̀wàrà", "Belu", "Ọ̀pẹ", ""], namesAbbr: ["Ṣẹ́ẹ́", "Èrè", "Ẹrẹ́", "Igb", "Èbì", "Okd", "Agẹ", "Ògú", "Ọwẹ", "Ọ̀wà", "Bel", "Ọ̀pẹ", ""] }, AM: ["Òwúrọ́", "òwúrọ́", "ÒWÚRỌ́"], PM: ["Alẹ̀", "alẹ̀", "ALẸ̀"], patterns: { d: "d/M/yyyy", D: "dddd, dd MMMM, yyyy", f: "dddd, dd MMMM, yyyy h:mm tt", F: "dddd, dd MMMM, yyyy h:mm:ss tt", Y: "MMMM,yyyy" } } } });