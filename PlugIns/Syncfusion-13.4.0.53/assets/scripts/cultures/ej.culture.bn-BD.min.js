ej.addCulture("bn-BD", { name: "bn-BD", englishName: "Bangla (Bangladesh)", nativeName: "বাংলা (বাংলাদেশ)", language: "bn", numberFormat: { groupSizes: [3, 2], percent: { pattern: ["-n%", "n %"], groupSizes: [3, 2] }, currency: { pattern: ["$ -n", "$ n"], groupSizes: [3, 2], symbol: "৳" } }, calendars: { standard: { "/": "-", ":": ".", days: { names: ["রবিবার", "সোমবার", "মঙ্গলবার", "বুধবার", "বৃহস্পতিবার", "শুক্রবার", "শনিবার"], namesAbbr: ["রবি.", "সোম.", "মঙ্গল.", "বুধ.", "বৃহ.", "শুক্র.", "শনি."], namesShort: ["র", "সো", "ম", "বু", "বৃ", "শু", "শ"] }, months: { names: ["জানুয়ারী", "ফেব্রুয়ারী", "মার্চ", "এপ্রিল", "মে", "জুন", "জুলাই", "আগস্ট", "সেপ্টেম্বর", "অক্টোবর", "নভেম্বর", "ডিসেম্বর", ""], namesAbbr: ["জানু.", "ফেব্রু.", "মার্চ", "এপ্রিল", "মে", "জুন", "জুলাই", "আগ.", "সেপ্টে.", "অক্টো.", "নভে.", "ডিসে.", ""] }, AM: ["পুর্বাহ্ন", "পুর্বাহ্ন", "পুর্বাহ্ন"], PM: ["অপরাহ্ন", "অপরাহ্ন", "অপরাহ্ন"], patterns: { d: "dd-MM-yy", D: "dd MMMM yyyy", t: "HH.mm", T: "HH.mm.ss", f: "dd MMMM yyyy HH.mm", F: "dd MMMM yyyy HH.mm.ss", M: "dd MMMM", Y: "MMMM, yyyy" } }, Hijri: { name: "Hijri", "/": "-", ":": ".", days: { names: ["রবিবার", "সোমবার", "মঙ্গলবার", "বুধবার", "বৃহস্পতিবার", "শুক্রবার", "শনিবার"], namesAbbr: ["রবি.", "সোম.", "মঙ্গল.", "বুধ.", "বৃহ.", "শুক্র.", "শনি."], namesShort: ["র", "সো", "ম", "বু", "বৃ", "শু", "শ"] }, months: { names: ["মহরম", "সফর", "রবি-উল-আউয়াল", "রবিp-আথ-থানি", "জুমাদা-আল-উলা", "জুমাদা-আথ-আখিরা", "রজব", "শাবান", "রমজান", "শাওয়াল", "ধু-আল-কদা", "ধূ-আল-হিজ্জা", ""], namesAbbr: ["মহরম", "সফর", "রবি-উল-আউয়াল", "রবি-আথ-থানি", "জুমাদা-আল-উলা", "জুমাদা-আথ-আখিরা", "রজব", "শাবান", "রমজান", "শাওয়াল", "ধু-আল-কদা", "ধূ-আল-হিজ্জা", ""] }, AM: ["পুর্বাহ্ন", "পুর্বাহ্ন", "পুর্বাহ্ন"], PM: ["অপরাহ্ন", "অপরাহ্ন", "অপরাহ্ন"], twoDigitYearMax: 1451, patterns: { d: "dd-MM-yy", D: "dd MMMM yyyy", t: "HH.mm", T: "HH.mm.ss", f: "dd MMMM yyyy HH.mm", F: "dd MMMM yyyy HH.mm.ss", M: "dd MMMM", Y: "MMMM, yyyy" }, convert: { ticks1970: 621355968e5, monthDays: [0, 30, 59, 89, 118, 148, 177, 207, 236, 266, 295, 325, 355], minDate: -425216736e5, maxDate: 0xe677d21fdbff, hijriAdjustment: 0, toGregorian: function (e, t, a) { var s = this.daysToYear(e) + this.monthDays[t] + a - 1 - this.hijriAdjustment, n = new Date(864e5 * s - this.ticks1970); return n.setMinutes(n.getMinutes() + n.getTimezoneOffset()), n }, fromGregorian: function (e) { if (e < this.minDate || e > this.maxDate) return null; var t, a, s = this.ticks1970 + (e - 0) - 6e4 * e.getTimezoneOffset(), n = Math.floor(s / 864e5) + 1 + this.hijriAdjustment, r = Math.floor(30 * (n - 227013) / 10631) + 1, M = this.daysToYear(r), i = this.isLeapYear(r) ? 355 : 354; M > n ? (r--, M -= i) : n === M ? (r--, M = this.daysToYear(r)) : n > M + i && (M += i, r++), a = 0; for (var m = n - M; 11 >= a && m > this.monthDays[a];) a++; return a--, t = m - this.monthDays[a], [r, a, t] }, daysToYear: function (e) { for (var t = 30 * Math.floor((e - 1) / 30), a = e - t - 1, s = Math.floor(10631 * t / 30) + 227013; a > 0;) s += this.isLeapYear(a) ? 355 : 354, a--; return s }, isLeapYear: function (e) { return 11 > (11 * e + 14) % 30 } } } } });