ej.addCulture("uz-Latn", { name: "uz-Latn", englishName: "Uzbek (Latin)", nativeName: "O'zbekcha", language: "uz-Latn", numberFormat: { ",": " ", ".": ",", percent: { pattern: ["-n%", "n%"], ",": " ", ".": "," }, currency: { pattern: ["-n $", "n $"], ",": " ", ".": ",", symbol: "so'm" } }, calendars: { standard: { "/": ".", firstDay: 1, days: { names: ["yakshanba", "dushanba", "seshanba", "chorshanba", "payshanba", "juma", "shanba"], namesAbbr: ["Ya", "Du", "Se", "Ch", "Pa", "Ju", "Sh"], namesShort: ["Ya", "D", "S", "Ch", "P", "J", "Sh"] }, months: { names: ["yanvar", "fevral", "mart", "aprel", "may", "iyun", "iyul", "avgust", "sentyabr", "oktyabr", "noyabr", "dekabr", ""], namesAbbr: ["Yan", "Fev", "Mar", "Apr", "May", "Iyn", "Iyl", "Avg", "Sen", "Okt", "Noy", "Dek", ""] }, AM: null, PM: null, patterns: { d: "dd.MM.yyyy", D: "yyyy 'yil' d-MMMM", t: "HH:mm", T: "HH:mm:ss", f: "yyyy 'yil' d-MMMM HH:mm", F: "yyyy 'yil' d-MMMM HH:mm:ss", M: "d-MMMM" } }, Hijri: { name: "Hijri", firstDay: 1, days: { names: ["yakshanba", "dushanba", "seshanba", "chorshanba", "payshanba", "juma", "shanba"], namesAbbr: ["Du", "Se", "Ch", "Pa", "Ju", "Sh", "Ya"], namesShort: ["ya", "d", "s", "ch", "p", "j", "sh"] }, months: { names: ["Muharram", "Safar", "Robi’ ul-avval", "Robi’ us-soniy", "Jumad ul-avval", "Jumad us-soniy", "Rajab", "Sha’bon", "Ramazon", "Shavvol", "Zulqa’da", "Zulhijja", ""], namesAbbr: ["Muharram", "Safar", "Robi’ ul-avval", "Robi’ us-soniy", "Jumad ul-avval", "Jumad us-soniy", "Rajab", "Sha’bon", "Ramazon", "Shavvol", "Zulqa’da", "Zulhijja", ""] }, AM: null, PM: null, twoDigitYearMax: 1451, patterns: { d: "dd/MM yyyy", D: "yyyy 'yil' d-MMMM", t: "HH:mm", T: "HH:mm:ss", f: "yyyy 'yil' d-MMMM HH:mm", F: "yyyy 'yil' d-MMMM HH:mm:ss", M: "d-MMMM" }, convert: { ticks1970: 621355968e5, monthDays: [0, 30, 59, 89, 118, 148, 177, 207, 236, 266, 295, 325, 355], minDate: -425216736e5, maxDate: 0xe677d21fdbff, hijriAdjustment: 0, toGregorian: function (a, n, s) { var e = this.daysToYear(a) + this.monthDays[n] + s - 1 - this.hijriAdjustment, t = new Date(864e5 * e - this.ticks1970); return t.setMinutes(t.getMinutes() + t.getTimezoneOffset()), t }, fromGregorian: function (a) { if (a < this.minDate || a > this.maxDate) return null; var n, s, e = this.ticks1970 + (a - 0) - 6e4 * a.getTimezoneOffset(), t = Math.floor(e / 864e5) + 1 + this.hijriAdjustment, r = Math.floor(30 * (t - 227013) / 10631) + 1, y = this.daysToYear(r), i = this.isLeapYear(r) ? 355 : 354; y > t ? (r--, y -= i) : t === y ? (r--, y = this.daysToYear(r)) : t > y + i && (y += i, r++), s = 0; for (var m = t - y; 11 >= s && m > this.monthDays[s];) s++; return s--, n = m - this.monthDays[s], [r, s, n] }, daysToYear: function (a) { for (var n = 30 * Math.floor((a - 1) / 30), s = a - n - 1, e = Math.floor(10631 * n / 30) + 227013; s > 0;) e += this.isLeapYear(s) ? 355 : 354, s--; return e }, isLeapYear: function (a) { return 11 > (11 * a + 14) % 30 } } } } });