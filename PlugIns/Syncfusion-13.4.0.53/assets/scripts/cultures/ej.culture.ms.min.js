ej.addCulture("ms", { name: "ms", englishName: "Malay", nativeName: "Bahasa Melayu", language: "ms", numberFormat: { currency: { decimals: 0, symbol: "RM" } }, calendars: { standard: { firstDay: 1, days: { names: ["Ahad", "Isnin", "Selasa", "Rabu", "Khamis", "Jumaat", "Sabtu"], namesAbbr: ["Ahd", "Isn", "Sel", "Rab", "Kha", "Jum", "Sab"], namesShort: ["A", "I", "S", "R", "K", "J", "S"] }, months: { names: ["Januari", "Februari", "Mac", "April", "Mei", "Jun", "Julai", "Ogos", "September", "Oktober", "November", "Disember", ""], namesAbbr: ["Jan", "Feb", "Mac", "Apr", "Mei", "Jun", "Jul", "Ogos", "Sept", "Okt", "Nov", "Dis", ""] }, patterns: { d: "dd/MM/yyyy", D: "dd MMMM yyyy", t: "H:mm", T: "H:mm:ss", f: "dd MMMM yyyy H:mm", F: "dd MMMM yyyy H:mm:ss", M: "dd MMMM" } }, Hijri: { name: "Hijri", firstDay: 1, days: { names: ["Ahad", "Isnin", "Selasa", "Rabu", "Khamis", "Jumaat", "Sabtu"], namesAbbr: ["Ahd", "Isn", "Sel", "Rab", "Kha", "Jum", "Sab"], namesShort: ["A", "I", "S", "R", "K", "J", "S"] }, months: { names: ["Muharram", "Safar", "Rabiul Awal", "Rabiul Akhir", "Jamadil Awal", "Jamadil Akhir", "Rejab", "Syaaban", "Ramadhan", "Syawal", "Zulkaedah", "Zulhijjah", ""], namesAbbr: ["Muh", "Saf", "Raw", "Rak", "Jaw", "Jak", "Rej", "Syb", "Ram", "Syw", "Zkh", "Zhj", ""] }, twoDigitYearMax: 1451, patterns: { d: "dd/MM/yyyy", D: "dd MMMM yyyy", t: "H:mm", T: "H:mm:ss", f: "dd MMMM yyyy H:mm", F: "dd MMMM yyyy H:mm:ss", M: "dd MMMM" }, convert: { ticks1970: 621355968e5, monthDays: [0, 30, 59, 89, 118, 148, 177, 207, 236, 266, 295, 325, 355], minDate: -425216736e5, maxDate: 0xe677d21fdbff, hijriAdjustment: 0, toGregorian: function (a, e, s) { var t = this.daysToYear(a) + this.monthDays[e] + s - 1 - this.hijriAdjustment, r = new Date(864e5 * t - this.ticks1970); return r.setMinutes(r.getMinutes() + r.getTimezoneOffset()), r }, fromGregorian: function (a) { if (a < this.minDate || a > this.maxDate) return null; var e, s, t = this.ticks1970 + (a - 0) - 6e4 * a.getTimezoneOffset(), r = Math.floor(t / 864e5) + 1 + this.hijriAdjustment, i = Math.floor(30 * (r - 227013) / 10631) + 1, m = this.daysToYear(i), n = this.isLeapYear(i) ? 355 : 354; m > r ? (i--, m -= n) : r === m ? (i--, m = this.daysToYear(i)) : r > m + n && (m += n, i++), s = 0; for (var M = r - m; 11 >= s && M > this.monthDays[s];) s++; return s--, e = M - this.monthDays[s], [i, s, e] }, daysToYear: function (a) { for (var e = 30 * Math.floor((a - 1) / 30), s = a - e - 1, t = Math.floor(10631 * e / 30) + 227013; s > 0;) t += this.isLeapYear(s) ? 355 : 354, s--; return t }, isLeapYear: function (a) { return 11 > (11 * a + 14) % 30 } } } } });