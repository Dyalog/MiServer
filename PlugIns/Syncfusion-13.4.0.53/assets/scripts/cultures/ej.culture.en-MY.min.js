ej.addCulture("en-MY", { name: "en-MY", englishName: "English (Malaysia)", nativeName: "English (Malaysia)", numberFormat: { percent: { pattern: ["-n%", "n%"] }, currency: { symbol: "RM" } }, calendars: { standard: { days: { namesShort: ["S", "M", "T", "W", "T", "F", "S"] }, patterns: { d: "d/M/yyyy", D: "dddd, d MMMM, yyyy", f: "dddd, d MMMM, yyyy h:mm tt", F: "dddd, d MMMM, yyyy h:mm:ss tt", M: "d MMMM", Y: "MMMM, yyyy" } }, Hijri: { name: "Hijri", days: { namesShort: ["S", "M", "T", "W", "T", "F", "S"] }, months: { names: ["Muharram", "Safar", "Rabiul Awal", "Rabiul Akhir", "Jamadil Awal", "Jamadil Akhir", "Rejab", "Syaaban", "Ramadhan", "Syawal", "Zulkaedah", "Zulhijjah", ""], namesAbbr: ["Muh", "Sfr", "Raw", "Rak", "Jaw", "Jak", "Rjb", "Syb", "Ram", "Syw", "Zkh", "Zhj", ""] }, twoDigitYearMax: 1451, patterns: { d: "dd/MM/yyyy", D: "dd MMMM yyyy", f: "dd MMMM yyyy h:mm tt", F: "dd MMMM yyyy h:mm:ss tt", M: "dd MMMM" }, convert: { ticks1970: 621355968e5, monthDays: [0, 30, 59, 89, 118, 148, 177, 207, 236, 266, 295, 325, 355], minDate: -425216736e5, maxDate: 0xe677d21fdbff, hijriAdjustment: 0, toGregorian: function (a, t, e) { var r = this.daysToYear(a) + this.monthDays[t] + e - 1 - this.hijriAdjustment, i = new Date(864e5 * r - this.ticks1970); return i.setMinutes(i.getMinutes() + i.getTimezoneOffset()), i }, fromGregorian: function (a) { if (a < this.minDate || a > this.maxDate) return null; var t, e, r = this.ticks1970 + (a - 0) - 6e4 * a.getTimezoneOffset(), i = Math.floor(r / 864e5) + 1 + this.hijriAdjustment, s = Math.floor(30 * (i - 227013) / 10631) + 1, M = this.daysToYear(s), n = this.isLeapYear(s) ? 355 : 354; M > i ? (s--, M -= n) : i === M ? (s--, M = this.daysToYear(s)) : i > M + n && (M += n, s++), e = 0; for (var y = i - M; 11 >= e && y > this.monthDays[e];) e++; return e--, t = y - this.monthDays[e], [s, e, t] }, daysToYear: function (a) { for (var t = 30 * Math.floor((a - 1) / 30), e = a - t - 1, r = Math.floor(10631 * t / 30) + 227013; e > 0;) r += this.isLeapYear(e) ? 355 : 354, e--; return r }, isLeapYear: function (a) { return 11 > (11 * a + 14) % 30 } } } } });