ej.addCulture("uz-Cyrl-UZ", { name: "uz-Cyrl-UZ", englishName: "Uzbek (Cyrillic, Uzbekistan)", nativeName: "Ўзбекча (Ўзбекистон Республикаси)", language: "uz-Cyrl", numberFormat: { ",": " ", ".": ",", percent: { pattern: ["-n%", "n%"], ",": " ", ".": "," }, currency: { pattern: ["-n $", "n $"], ",": " ", ".": ",", symbol: "сўм" } }, calendars: { standard: { "/": ".", firstDay: 1, days: { names: ["якшанба", "душанба", "сешанба", "чоршанба", "пайшанба", "жума", "шанба"], namesAbbr: ["якш", "дш", "сш", "чш", "пш", "ж", "ш"], namesShort: ["як", "д", "с", "ч", "п", "ж", "ш"] }, months: { names: ["январ", "феврал", "март", "апрел", "май", "июн", "июл", "август", "сентябр", "октябр", "ноябр", "декабр", ""], namesAbbr: ["Янв", "Фев", "Мар", "Апр", "Май", "Июн", "Июл", "Авг", "Сен", "Окт", "Ноя", "Дек", ""] }, AM: null, PM: null, patterns: { d: "dd.MM.yyyy", D: "yyyy 'йил' d-MMMM", t: "HH:mm", T: "HH:mm:ss", f: "yyyy 'йил' d-MMMM HH:mm", F: "yyyy 'йил' d-MMMM HH:mm:ss", M: "d MMMM" } }, Hijri: { name: "Hijri", "/": ".", firstDay: 1, days: { names: ["якшанба", "душанба", "сешанба", "чоршанба", "пайшанба", "жума", "шанба"], namesAbbr: ["якш", "дш", "сш", "чш", "пш", "ж", "ш"], namesShort: ["я", "д", "с", "ч", "п", "ж", "ш"] }, months: { names: ["Муҳаррам", "Сафар", "Робиъ ул-аввал", "Робиъ ус-соний", "Жумад ул-аввал", "Жумад ус-соний", "Ражаб", "Шаъбон", "Рамазон", "Шаввол", "Зулқаъда", "Зулҳижжа", ""], namesAbbr: ["Муҳаррам", "Сафар", "Робиъ ул-аввал", "Робиъ ус-соний", "Жумад ул-аввал", "Жумад ус-соний", "Ражаб", "Шаъбон", "Рамазон", "Шаввол", "Зулқаъда", "Зулҳижжа", ""] }, AM: null, PM: null, twoDigitYearMax: 1451, patterns: { d: "dd.MM.yyyy", D: "yyyy 'йил' d-MMMM", t: "HH:mm", T: "HH:mm:ss", f: "yyyy 'йил' d-MMMM HH:mm", F: "yyyy 'йил' d-MMMM HH:mm:ss", M: "d-MMMM" }, convert: { ticks1970: 621355968e5, monthDays: [0, 30, 59, 89, 118, 148, 177, 207, 236, 266, 295, 325, 355], minDate: -425216736e5, maxDate: 0xe677d21fdbff, hijriAdjustment: 0, toGregorian: function (t, e, a) { var s = this.daysToYear(t) + this.monthDays[e] + a - 1 - this.hijriAdjustment, n = new Date(864e5 * s - this.ticks1970); return n.setMinutes(n.getMinutes() + n.getTimezoneOffset()), n }, fromGregorian: function (t) { if (t < this.minDate || t > this.maxDate) return null; var e, a, s = this.ticks1970 + (t - 0) - 6e4 * t.getTimezoneOffset(), n = Math.floor(s / 864e5) + 1 + this.hijriAdjustment, r = Math.floor(30 * (n - 227013) / 10631) + 1, i = this.daysToYear(r), y = this.isLeapYear(r) ? 355 : 354; i > n ? (r--, i -= y) : n === i ? (r--, i = this.daysToYear(r)) : n > i + y && (i += y, r++), a = 0; for (var m = n - i; 11 >= a && m > this.monthDays[a];) a++; return a--, e = m - this.monthDays[a], [r, a, e] }, daysToYear: function (t) { for (var e = 30 * Math.floor((t - 1) / 30), a = t - e - 1, s = Math.floor(10631 * e / 30) + 227013; a > 0;) s += this.isLeapYear(a) ? 355 : 354, a--; return s }, isLeapYear: function (t) { return 11 > (11 * t + 14) % 30 } } } } });