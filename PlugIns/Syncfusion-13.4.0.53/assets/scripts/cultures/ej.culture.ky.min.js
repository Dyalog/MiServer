ej.addCulture("ky", { name: "ky", englishName: "Kyrgyz", nativeName: "Кыргыз", language: "ky", numberFormat: { ",": " ", ".": ",", negativeInfinity: "терс чексиздик", positiveInfinity: "оң чексиздик", percent: { pattern: ["-n%", "n%"], ",": " ", ".": "," }, currency: { pattern: ["-n $", "n $"], ",": " ", ".": ",", symbol: "сом" } }, calendars: { standard: { "/": "-", firstDay: 1, days: { names: ["жекшемби", "дүйшөмбү", "шейшемби", "шаршемби", "бейшемби", "жума", "ишемби"], namesAbbr: ["Жш", "Дш", "Шш", "Шр", "Бш", "Жм", "Иш"], namesShort: ["Жш", "Дш", "Шш", "Шр", "Бш", "Жм", "Иш"] }, months: { names: ["январь", "февраль", "март", "апрель", "май", "июнь", "июль", "август", "сентябрь", "октябрь", "ноябрь", "декабрь", ""], namesAbbr: ["янв", "фев", "мар", "апр", "май", "июн", "июл", "авг", "сен", "окт", "ноя", "дек", ""] }, AM: null, PM: null, patterns: { d: "d-MMM yy", D: "dd'-'MMMM yyyy'-ж.'", t: "HH:mm", T: "HH:mm:ss", f: "dd'-'MMMM yyyy'-ж.' HH:mm", F: "dd'-'MMMM yyyy'-ж.' HH:mm:ss", M: "d'-'MMMM", Y: "MMMM yyyy'-ж.'" } }, Hijri: { name: "Hijri", "/": ".", firstDay: 1, days: { names: ["Жекшемби", "Дүйшөмбү", "Шейшемби", "Шаршемби", "Бейшемби", "Жума", "Ишемби"], namesAbbr: ["Жш", "Дш", "Шш", "Шр", "Бш", "Жм", "Иш"], namesShort: ["Жш", "Дш", "Шш", "Шр", "Бш", "Жм", "Иш"] }, months: { names: ["үчтүн айы", "бирдин айы", "жалган куран", "чын куран", "бугу", "кулжа", "теке", "баш оона", "аяк оона", "тогуздун айы", "жетинин айы", "бештин айы", ""], namesAbbr: ["үчтүн айы", "бирдин айы", "жалган куран", "чын куран", "бугу", "кулжа", "теке", "баш оона", "аяк оона", "тогуздун айы", "жетинин айы", "бештин айы", ""] }, AM: null, PM: null, twoDigitYearMax: 1451, patterns: { d: "dd.MM.yy", D: "d'-'MMMM yyyy'-ж.'", t: "HH:mm", T: "HH:mm:ss", f: "d'-'MMMM yyyy'-ж.' HH:mm", F: "d'-'MMMM yyyy'-ж.' HH:mm:ss", M: "d MMMM", Y: "MMMM yyyy'-ж.'" }, convert: { ticks1970: 621355968e5, monthDays: [0, 30, 59, 89, 118, 148, 177, 207, 236, 266, 295, 325, 355], minDate: -425216736e5, maxDate: 0xe677d21fdbff, hijriAdjustment: 0, toGregorian: function (t, e, n) { var a = this.daysToYear(t) + this.monthDays[e] + n - 1 - this.hijriAdjustment, s = new Date(864e5 * a - this.ticks1970); return s.setMinutes(s.getMinutes() + s.getTimezoneOffset()), s }, fromGregorian: function (t) { if (t < this.minDate || t > this.maxDate) return null; var e, n, a = this.ticks1970 + (t - 0) - 6e4 * t.getTimezoneOffset(), s = Math.floor(a / 864e5) + 1 + this.hijriAdjustment, r = Math.floor(30 * (s - 227013) / 10631) + 1, M = this.daysToYear(r), y = this.isLeapYear(r) ? 355 : 354; M > s ? (r--, M -= y) : s === M ? (r--, M = this.daysToYear(r)) : s > M + y && (M += y, r++), n = 0; for (var i = s - M; 11 >= n && i > this.monthDays[n];) n++; return n--, e = i - this.monthDays[n], [r, n, e] }, daysToYear: function (t) { for (var e = 30 * Math.floor((t - 1) / 30), n = t - e - 1, a = Math.floor(10631 * e / 30) + 227013; n > 0;) a += this.isLeapYear(n) ? 355 : 354, n--; return a }, isLeapYear: function (t) { return 11 > (11 * t + 14) % 30 } } } } });